<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/ACE617BE-3E38-4485-9965-C2A062A22E3A"><gtr:id>ACE617BE-3E38-4485-9965-C2A062A22E3A</gtr:id><gtr:firstName>Jeremy</gtr:firstName><gtr:surname>Gibbons</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/C945C815-0502-4FC3-9D9F-9820DA045B83"><gtr:id>C945C815-0502-4FC3-9D9F-9820DA045B83</gtr:id><gtr:firstName>Ralf</gtr:firstName><gtr:otherNames>Thomas</gtr:otherNames><gtr:surname>Hinze</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FJ010995%2F1"><gtr:id>D3B8A127-89CE-4EA3-A7F9-D345D2B74241</gtr:id><gtr:title>Unifying Theories of Generic Programming</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/J010995/1</gtr:grantReference><gtr:abstractText>The world is increasingly dependent on robust, reliable software that meets its specification. At the same time, software has to be delivered at an increasingly faster rate. As a consequence, the software industry, especially in Europe and the UK, is facing a growing tension between productivity and reliability. Generic programming aims at relieving this tension.

The vision of this project is to develop a unifying theory of generic programming that will inform the design of future programming languages. Our goal is to produce a body of work that is in the same vein as the seminal work on Unifying Theories of Programming by Hoare and He: we consider the outcome of this project to be a unified foundation for generic programming that brings together the advantages of previous work into a coherent whole.

From the perspective of increasing programmer productivity, the importance of understanding and applying generic programming has never been so critical. Software engineers are constantly faced with the challenge of adapting to changing specifications and designs, while ensuring that the ensuing refactoring maintains the correctness of the algorithms they have crafted. Our approach to solving this problem - generic programming - exploits the inherent structure that exists in data, where this structure can be used to automatically produce efficient and flexible algorithms that can be adapted to suit different needs. Furthermore, generic programs ensure that the structure of the data itself plays a central role in maintaining the correctness of these algorithms.

The functional programming language Haskell offers rudimentary support for generic programming in the form of the deriving mechanism. Instead of manually coding, for example, equality for a datatype, the Haskell programmer attaches a simple hint to the datatype declaration which instructs the compiler to auto-generate equality and inequality for the datatype. Simple, convenient and robust. If the datatype is changed at a later point in time, equality and inequality are modified accordingly behind the scenes, supporting software evolution and easing software maintenance.

Haskell's support for generic programming is only partial, as the deriving mechanism is limited to a few predefined classes. In particular, one cannot define new derivable classes. This is exactly what generic programming supports. Informally, a derivable or generic function is defined by induction on the structure of types. The generic programmer provides code for a few type constructs, the rest is taken care of automatically. The generic program can then be instantiated many times at different types.

The last two decades have witnessed a number of approaches to generic programming differing in convenience, expressiveness and efficiency. We can roughly distinguish two main approaches: algebraic and type-theoretic ones. Both come with their various strengths and weaknesses. This project seeks to generalise and unify the two approaches, combining their individual strengths. It will do so using methods from a branch of mathematics called Category Theory. Furthermore, the project will explore novel approaches for the specification of generic programs, provide the infrastructure for reasoning about generic programs, and demonstrate that GP has far-reaching and important applications in practice.</gtr:abstractText><gtr:potentialImpactText>We have separated our project into three main research tracks: theory, reasoning and specification, and application. These roughly correspond to three principal beneficiaries of our work: language designers, academics and students, and practising software engineers.

Impact on Language Designers
----------------------------

The vision of our project is to develop a unifying theory of generic programming. We expect that, in the medium to long term, the proposed research will lead to fundamental advances in the design of programming languages and techniques for generic programming. This will also have an impact on practicing programmers, providing them with powerful new programming tools and techniques.

Impact on Academics and Students
--------------------------------

There has been much work on generic programming in the Mathematics of Program Construction, Algorithmic Languages and Calculi and Functional Programming communities, of which Gibbons and Hinze are established members; this background will contribute greatly to the work we propose. Conversely, the proposed research will have an impact on the three communities, providing new applications for existing techniques and opening new areas of research.

We plan to organise a Summer School on Unifying Theories of Generic Programming towards the end of the project. Summer Schools are widely recognised within academia as a good means of providing a wealth of information and training to students and established researchers alike. Besides helping us in disseminating our results to the community, a Summer School will also bring leading researchers throughout the world to the UK as lecturers, to the benefit of other UK PhD students.

Finally, the work supported by this project will make a vital contribution to the career development of the two research assistants.

Gibbons and Hinze hold positions in the Software Engineering Programme, which provides postgraduate courses for professional software engineers leading to MSc degrees in Software Engineering and Software &amp;amp; System Security. The Software Engineering Programme has immediate impact on industry, as it draws students from prominent corporate entities such as IBM, Samsung and Sony, as well as many smaller companies. Like for previous projects, suitable aspects of the work will be fed back into these courses.

Impact on Software Engineers
----------------------------

We expect that the proposed work has both short and medium term impact on software engineers. The application track will have a very direct impact on the Haskell community by creating efficient libraries for a multitude of datatype-generic problems. Haskell supports a variety of concurrent and parallel programming models, serving as an ideal testbed for creating high-performance parallel version of these libraries. Looking further out, we hope to leverage these techniques to build industrial-strength libraries for mainstream languages.</gtr:potentialImpactText><gtr:fund><gtr:end>2015-07-31</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2012-02-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>574864</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/FB6B7F5D-02D6-4C37-AAF4-A920545975CD"><gtr:id>FB6B7F5D-02D6-4C37-AAF4-A920545975CD</gtr:id><gtr:title>The right kind of generic programming</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/95cbacbb9e655f9e3f695cfdd4a85a28"><gtr:id>95cbacbb9e655f9e3f695cfdd4a85a28</gtr:id><gtr:otherNames>Magalh?es J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>9781450315760</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/FF9302C2-6F84-4ED4-9A6E-9447B2799648"><gtr:id>FF9302C2-6F84-4ED4-9A6E-9447B2799648</gtr:id><gtr:title>Functional and Logic Programming</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/95cbacbb9e655f9e3f695cfdd4a85a28"><gtr:id>95cbacbb9e655f9e3f695cfdd4a85a28</gtr:id><gtr:otherNames>Magalh?es J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-319-07150-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/30EACFDE-D118-4556-B17A-7355B418ECCF"><gtr:id>30EACFDE-D118-4556-B17A-7355B418ECCF</gtr:id><gtr:title>Generic and Indexed Programming</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-32201-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/18B65391-CE37-4C24-AE0B-F2078552EF65"><gtr:id>18B65391-CE37-4C24-AE0B-F2078552EF65</gtr:id><gtr:title>Understanding idiomatic traversals backwards and forwards</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/a54567abda96dc4fb78e28cc75c93e62"><gtr:id>a54567abda96dc4fb78e28cc75c93e62</gtr:id><gtr:otherNames>Bird R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>9781450323833</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/8EDFBF28-300A-4F53-9251-DDAF4B8B6E5D"><gtr:id>8EDFBF28-300A-4F53-9251-DDAF4B8B6E5D</gtr:id><gtr:title>Implementation and Application of Functional Languages</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/95cbacbb9e655f9e3f695cfdd4a85a28"><gtr:id>95cbacbb9e655f9e3f695cfdd4a85a28</gtr:id><gtr:otherNames>Magalh?es J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-41581-4</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/754497C8-2BDD-4293-A4CD-7D582C4C15A8"><gtr:id>754497C8-2BDD-4293-A4CD-7D582C4C15A8</gtr:id><gtr:title>Practical Aspects of Declarative Languages</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/95cbacbb9e655f9e3f695cfdd4a85a28"><gtr:id>95cbacbb9e655f9e3f695cfdd4a85a28</gtr:id><gtr:otherNames>Magalh?es J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-319-04131-5</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/BA109927-5FE1-4061-83DC-46E6EED5A79F"><gtr:id>BA109927-5FE1-4061-83DC-46E6EED5A79F</gtr:id><gtr:title>Histo- and dynamorphisms revisited</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>9781450323895</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/7A6908F7-B65F-45B3-8F3B-51651FAA2F53"><gtr:id>7A6908F7-B65F-45B3-8F3B-51651FAA2F53</gtr:id><gtr:title>Conjugate Hylomorphisms -- Or</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:isbn>9781450333009</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/170BE63A-3728-49E3-88A3-8E4A28DF5AEF"><gtr:id>170BE63A-3728-49E3-88A3-8E4A28DF5AEF</gtr:id><gtr:title>Towards a categorical foundation for generic programming</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date><gtr:isbn>9781450308618</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/5AC07B22-2EB4-4A3A-B488-F67173CF008A"><gtr:id>5AC07B22-2EB4-4A3A-B488-F67173CF008A</gtr:id><gtr:title>Mathematics of Program Construction</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-31112-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/E3667B88-44C4-44B8-953A-536653ACF22E"><gtr:id>E3667B88-44C4-44B8-953A-536653ACF22E</gtr:id><gtr:title>Effect handlers in scope</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/3c54602fa940d2ec469c480f4ec40d35"><gtr:id>3c54602fa940d2ec469c480f4ec40d35</gtr:id><gtr:otherNames>Wu N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>9781450330411</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/DCBEB0DA-A04E-42A0-A1BB-5018A51F3A0A"><gtr:id>DCBEB0DA-A04E-42A0-A1BB-5018A51F3A0A</gtr:id><gtr:title>Folding domain-specific languages</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e1da6e35b9ceb516bc93168a19b75b6a"><gtr:id>e1da6e35b9ceb516bc93168a19b75b6a</gtr:id><gtr:otherNames>Gibbons J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/EB0CCC82-C136-49C9-8EFF-FCA1A956AA76"><gtr:id>EB0CCC82-C136-49C9-8EFF-FCA1A956AA76</gtr:id><gtr:title>Unifying structured recursion schemes</gtr:title><gtr:parentPublicationTitle>Journal of Functional Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/89bd043396aae81d5ebfde67eaa29fd8"><gtr:id>89bd043396aae81d5ebfde67eaa29fd8</gtr:id><gtr:otherNames>HINZE R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/9C01FE1A-8A40-44FB-8C06-C5E1364F773C"><gtr:id>9C01FE1A-8A40-44FB-8C06-C5E1364F773C</gtr:id><gtr:title>Kernels, in a nutshell</gtr:title><gtr:parentPublicationTitle>Journal of Logical and Algebraic Methods in Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e1da6e35b9ceb516bc93168a19b75b6a"><gtr:id>e1da6e35b9ceb516bc93168a19b75b6a</gtr:id><gtr:otherNames>Gibbons J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/B11E4A3E-CBAA-4375-A5C8-3B4F051D9725"><gtr:id>B11E4A3E-CBAA-4375-A5C8-3B4F051D9725</gtr:id><gtr:title>Implementation and Application of Functional Languages</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/3c54602fa940d2ec469c480f4ec40d35"><gtr:id>3c54602fa940d2ec469c480f4ec40d35</gtr:id><gtr:otherNames>Wu N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-41581-4</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/3B69F939-73DC-459A-B57D-087525848703"><gtr:id>3B69F939-73DC-459A-B57D-087525848703</gtr:id><gtr:title>A functional approach to automatic melody harmonisation</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/da3117561c3a872b0e1834e98f4afcc2"><gtr:id>da3117561c3a872b0e1834e98f4afcc2</gtr:id><gtr:otherNames>Koops H</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>9781450323864</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/0AD0E612-16B2-47F6-9810-F55A8CAE73F5"><gtr:id>0AD0E612-16B2-47F6-9810-F55A8CAE73F5</gtr:id><gtr:title>Automatic Functional Harmonic Analysis</gtr:title><gtr:parentPublicationTitle>Computer Music Journal</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/807ffdd2896a44f9f777a15eab15b193"><gtr:id>807ffdd2896a44f9f777a15eab15b193</gtr:id><gtr:otherNames>De Haas W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/F8249E6B-ED9A-4A9D-9055-8D62273CE86D"><gtr:id>F8249E6B-ED9A-4A9D-9055-8D62273CE86D</gtr:id><gtr:title>Sorting with bialgebras and distributive laws</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>9781450315760</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/420C4859-FE68-4655-918A-61885635C796"><gtr:id>420C4859-FE68-4655-918A-61885635C796</gtr:id><gtr:title>Folding domain-specific languages</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e1da6e35b9ceb516bc93168a19b75b6a"><gtr:id>e1da6e35b9ceb516bc93168a19b75b6a</gtr:id><gtr:otherNames>Gibbons J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>9781450328739</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C72D0343-4CA2-43E2-B5D9-026E85620448"><gtr:id>C72D0343-4CA2-43E2-B5D9-026E85620448</gtr:id><gtr:title>Equality proofs and deferred type errors</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/746e06327213e0f75778bda69808b35f"><gtr:id>746e06327213e0f75778bda69808b35f</gtr:id><gtr:otherNames>Vytiniotis D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/6DA7E474-69F5-4152-B53A-527D43DA8E31"><gtr:id>6DA7E474-69F5-4152-B53A-527D43DA8E31</gtr:id><gtr:title>Functional generation of harmony and melody</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/95cbacbb9e655f9e3f695cfdd4a85a28"><gtr:id>95cbacbb9e655f9e3f695cfdd4a85a28</gtr:id><gtr:otherNames>Magalh?es J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>9781450330398</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/61A38412-DA26-4691-9917-EFBE5E2893DC"><gtr:id>61A38412-DA26-4691-9917-EFBE5E2893DC</gtr:id><gtr:title>Programming Languages and Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/5a90240f122a618c207ee43784070b4d"><gtr:id>5a90240f122a618c207ee43784070b4d</gtr:id><gtr:otherNames>Henglein F</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-319-03541-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/3FA19712-5175-4BDC-824C-B0E6179154B3"><gtr:id>3FA19712-5175-4BDC-824C-B0E6179154B3</gtr:id><gtr:title>Generic representations of tree transformations</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/b9d336ecb6168e80048ff233e0d22cdb"><gtr:id>b9d336ecb6168e80048ff233e0d22cdb</gtr:id><gtr:otherNames>Bransen J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>9781450323895</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/13AE8E9D-F8FC-4EAF-AAAC-55FF0FC51FA6"><gtr:id>13AE8E9D-F8FC-4EAF-AAAC-55FF0FC51FA6</gtr:id><gtr:title>Tracing monadic computations and representing effects</gtr:title><gtr:parentPublicationTitle>Electronic Proceedings in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/7b8bbb482ce2a027e29825309d2298a7"><gtr:id>7b8bbb482ce2a027e29825309d2298a7</gtr:id><gtr:otherNames>Pir?g M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/939D6277-7144-4BE0-9007-B15D0215CAD3"><gtr:id>939D6277-7144-4BE0-9007-B15D0215CAD3</gtr:id><gtr:title>Unifying Theories of Programming</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e1da6e35b9ceb516bc93168a19b75b6a"><gtr:id>e1da6e35b9ceb516bc93168a19b75b6a</gtr:id><gtr:otherNames>Gibbons J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-35704-6</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/5E8A3BD5-0535-45AC-B9B0-0D1EE132E22F"><gtr:id>5E8A3BD5-0535-45AC-B9B0-0D1EE132E22F</gtr:id><gtr:title>Free delivery (functional pearl)</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e1da6e35b9ceb516bc93168a19b75b6a"><gtr:id>e1da6e35b9ceb516bc93168a19b75b6a</gtr:id><gtr:otherNames>Gibbons J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>9781450344340</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/DFFA7116-9C0C-49E2-ADA1-DE64678F6676"><gtr:id>DFFA7116-9C0C-49E2-ADA1-DE64678F6676</gtr:id><gtr:title>Central European Functional Programming School</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e1da6e35b9ceb516bc93168a19b75b6a"><gtr:id>e1da6e35b9ceb516bc93168a19b75b6a</gtr:id><gtr:otherNames>Gibbons J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:isbn>978-3-319-15939-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/1127641D-CBA4-4D68-A326-8DEB4A09EB21"><gtr:id>1127641D-CBA4-4D68-A326-8DEB4A09EB21</gtr:id><gtr:title>Optimizing SYB is easy!</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/4e4fad0283a1421bafc0b2b1e0e44b16"><gtr:id>4e4fad0283a1421bafc0b2b1e0e44b16</gtr:id><gtr:otherNames>Adams M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>9781450326193</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/D594A2DC-AAED-489B-AF65-DA8567E737A4"><gtr:id>D594A2DC-AAED-489B-AF65-DA8567E737A4</gtr:id><gtr:title>The Coinductive Resumption Monad</gtr:title><gtr:parentPublicationTitle>Electronic Notes in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/7b8bbb482ce2a027e29825309d2298a7"><gtr:id>7b8bbb482ce2a027e29825309d2298a7</gtr:id><gtr:otherNames>Pir?g M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/4BC354A9-8C58-4C2C-AC48-E07B6F2AC520"><gtr:id>4BC354A9-8C58-4C2C-AC48-E07B6F2AC520</gtr:id><gtr:title>Conjugate Hylomorphisms -- Or</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/385D84BF-7CC7-4C78-B703-42FD84690A2F"><gtr:id>385D84BF-7CC7-4C78-B703-42FD84690A2F</gtr:id><gtr:title>Adjoint folds and unfolds-An extended study</gtr:title><gtr:parentPublicationTitle>Science of Computer Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/BF7E009C-8A3B-41FB-84C7-81B33F02FF53"><gtr:id>BF7E009C-8A3B-41FB-84C7-81B33F02FF53</gtr:id><gtr:title>Effect handlers in scope</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/3c54602fa940d2ec469c480f4ec40d35"><gtr:id>3c54602fa940d2ec469c480f4ec40d35</gtr:id><gtr:otherNames>Wu N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/36B4D307-AADF-4236-A5DB-4C1E1FE4024C"><gtr:id>36B4D307-AADF-4236-A5DB-4C1E1FE4024C</gtr:id><gtr:title>Unifying structured recursion schemes</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/38d98420671d24943ce795678567d280"><gtr:id>38d98420671d24943ce795678567d280</gtr:id><gtr:otherNames>Hinze R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>9781450323260</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/CBA68850-E2DA-408F-AE84-A12C97F33FB3"><gtr:id>CBA68850-E2DA-408F-AE84-A12C97F33FB3</gtr:id><gtr:title>Monads for Behaviour</gtr:title><gtr:parentPublicationTitle>Electronic Notes in Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/7b8bbb482ce2a027e29825309d2298a7"><gtr:id>7b8bbb482ce2a027e29825309d2298a7</gtr:id><gtr:otherNames>Pir?g M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/A160AB60-C9F7-4FE3-986D-EEC325E5DBBC"><gtr:id>A160AB60-C9F7-4FE3-986D-EEC325E5DBBC</gtr:id><gtr:title>Relating Algebraic and Coalgebraic Descriptions of Lenses</gtr:title><gtr:parentPublicationTitle>Electronic Communications of the EASST</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/5f6ba5fb5fde696a62e62d0c08565c7e"><gtr:id>5f6ba5fb5fde696a62e62d0c08565c7e</gtr:id><gtr:otherNames>Jeremy Gibbons (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/J010995/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>