<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/3A5E126D-C175-4730-9B7B-E6D8CF447F83"><gtr:id>3A5E126D-C175-4730-9B7B-E6D8CF447F83</gtr:id><gtr:name>University College London</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Gower Street</gtr:line1><gtr:line4>London</gtr:line4><gtr:postCode>WC1E 6BT</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/3A5E126D-C175-4730-9B7B-E6D8CF447F83"><gtr:id>3A5E126D-C175-4730-9B7B-E6D8CF447F83</gtr:id><gtr:name>University College London</gtr:name><gtr:address><gtr:line1>Gower Street</gtr:line1><gtr:line4>London</gtr:line4><gtr:postCode>WC1E 6BT</gtr:postCode><gtr:region>London</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/1D505C5F-05FA-41F7-843E-223C799CCF2F"><gtr:id>1D505C5F-05FA-41F7-843E-223C799CCF2F</gtr:id><gtr:name>Microsoft Corporation (USA)</gtr:name><gtr:address><gtr:line1>One Microsoft Way</gtr:line1><gtr:postCode>98052-6399</gtr:postCode><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/0F7E0C2E-CD67-4CF2-A1F3-5864AF5E5F08"><gtr:id>0F7E0C2E-CD67-4CF2-A1F3-5864AF5E5F08</gtr:id><gtr:name>Visa Europe Limited</gtr:name><gtr:address><gtr:line1>1 Sheldon Square</gtr:line1><gtr:postCode>W2 6WH</gtr:postCode><gtr:region>Unknown</gtr:region></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9"><gtr:id>F262B9E0-E9D1-4BFF-B9BF-B4C81D12D8B9</gtr:id><gtr:name>Microsoft Research Ltd</gtr:name><gtr:address><gtr:line1>21 Station Road</gtr:line1><gtr:postCode>CB1 2FB</gtr:postCode><gtr:region>Unknown</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>PROJECT_PARTNER</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/6E87E7F3-388C-447B-83C7-A77A9079EBCB"><gtr:id>6E87E7F3-388C-447B-83C7-A77A9079EBCB</gtr:id><gtr:firstName>David</gtr:firstName><gtr:otherNames>John</gtr:otherNames><gtr:surname>Clark</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/52C6F68C-EDAE-4A3B-BE64-B37DFCC23474"><gtr:id>52C6F68C-EDAE-4A3B-BE64-B37DFCC23474</gtr:id><gtr:firstName>Bill</gtr:firstName><gtr:surname>Langdon</gtr:surname><gtr:roles><gtr:role><gtr:name>RESEARCHER_COI</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/9F8F104A-BAA6-49B9-B4BF-EC850996D384"><gtr:id>9F8F104A-BAA6-49B9-B4BF-EC850996D384</gtr:id><gtr:firstName>Mark</gtr:firstName><gtr:surname>Harman</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FM025853%2F1"><gtr:id>57C43A51-C7F2-423D-9B11-B59A7D142F42</gtr:id><gtr:title>GGGP: Grow and Graft Genetic Programming</gtr:title><gtr:status>Active</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/M025853/1</gtr:grantReference><gtr:abstractText>Programming is hard. Adding new functionality to an existing, large, and perhaps poorly-understood system is a challenge, even for the most competent human programmer. Despite much progress in software development environments, programming still includes many human activities that are dull, unproductive and tedious. The GGGP project is motivated by the frustration often expressed as questions such as &amp;quot;Why do software engineers spend so long repeatedly performing the same tedious low level software development tasks?&amp;quot; and &amp;quot;How many times do programmers work out how to express the idea of null pointer checking in a particular context or adapt existing code for searching an iterated data structure?&amp;quot;
 
We want to find a radically new approach to software development, supported by automated search that, we believe, will yield a dramatic reduction in development time. We propose a new approach to software development: Grow and Graft Genetic Programming (GGGP), in which a new feature is grown (using genetic programming) and subsequently grafted into an existing system. This grow and graft development approach aims to reduce the amount of tedious effort required by human programmer in order to develop and add new functionality into an existing system.

Our initial proof of concept work found that surprisingly little human guidance and domain knowledge is required from the programmer to guide Grow and Graft Genetic Programming. We therefore believe that it can radically change programming, 
making it faster and less error prone, with a consequent transformative effect on the software industry. We also believe it may make it more enjoyable to a wider range of people, with potentially transformative impact on the wider public involvement in 
(and understanding of) software development.

Our approach can be best understood in the context of the recent trend in Search Based Software Engineering (SBSE) called &amp;quot;genetic improvement&amp;quot;, which uses existing code as &amp;quot;genetic material&amp;quot; that helps to automatically improve existing software systems, which has achieved several recent notable breakthroughs, such as speed ups of 7 to 70 times on real-world systems, human competitive results in optimising constraint solvers, and automated bug fixing and repair work on existing systems.</gtr:abstractText><gtr:potentialImpactText>The project will maximise impact on the academic sector. Naturally, the results of the project will be published in leading journals and conference proceedings. An indicative list is given in the pathways to impact plan. The project team will also organise four two day workshops to deepen collaboration and widen the research base in evolutionary computation and in search based software engineering.

The initial industrial beneficiaries will be the core industrial partners of the project. However, the project team have many other very close links to the industrial sector (these are listed in the pathways to impact). The impact plan lists the companies with which we have existing active research work. The project team will also exploit its extensive network of industrial champions from established on-going projects who will assist in uptake by this initial pool of industrial beneficiaries. Our public understanding consultant, Sue Black, will ensure that results are widely disseminated to the general public. Ultimately, through increased reliability and reduced costs, the IT-centric areas of the wider economy and the general public will benefit.</gtr:potentialImpactText><gtr:fund><gtr:end>2019-10-27</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2015-10-28</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>581559</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs><gtr:disseminationOutput><gtr:description>The 50th CREST Open Workshop - Genetic Improvement</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>E7429CBC-5AAE-45BE-98D5-5C1118DBEDBD</gtr:id><gtr:impact>Genetic Improvement (GI) uses automated search to find improved versions of existing software. GI has been used to improve many system aspects such as its correctness (through bug fixing) and resource consumption such as time, memory and energy. It has also been used for other kinds of improvement such as specialising and porting. Many and varied techniques have proved successful at improving programs, such as loop perforation, genetic programming, guided random search, transplantation and constraint-based synthesis. This workshop will bring together researchers working on search based software engineering, program synthesis, genetic programming, program analysis, data mining and machine learning. We will explore the possible applications and connections between the various fields that will hopefully lead to development of new GI techniques for automated software improvement.</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://crest.cs.ucl.ac.uk/cow/50/</gtr:url><gtr:year>2017</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Talk at  UK Many-Core Developer Conference 2016 -</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>National</gtr:geographicReach><gtr:id>1BBCFEAE-8B96-4719-8461-22466E6F953C</gtr:id><gtr:impact>BarraCUDA is a Bioinformatics tool which looks up in a reference genome short noisy DNA sequences produced by the billion by next generation sequencing tools. It is a port of the BWA algorithm by six co-authors who included both experts on CUDA and experts in Bioinformatics, especially BWA and the BWT compression algorithm. BarraCUDA is open source CUDA code and is available from SourceForge. The existing code was improved by a combination of manual changes and automatic genetic evolution. The genetically improved code has been incorporated and has been available from SourceForge for a year.

As with all implementations of BWT, speed depends upon the length of the DNA reads. For shorter reads a single lowly GT 730 (&amp;pound;50) can be faster than BWA. The GI version of BarraCUDA is up to three times faster than the earlier version of BarraCUDA. The new version has been adopted by Lab7 and IBM (including for Power8).</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://conferences.inf.ed.ac.uk/UKMAC2016/</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Approaches and Applications of Inductive Programming</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>National</gtr:geographicReach><gtr:id>4054ADE3-22ED-486F-920F-1A636D19D595</gtr:id><gtr:impact>Dagstuhl Seminar 15442 on Approaches and Applications of Inductive Programming</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://www.dagstuhl.de/de/programm/kalender/semhp/?semnr=15442</gtr:url><gtr:year>2015</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>45th CREST Open Workshop - Genetic Improvement</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>International</gtr:geographicReach><gtr:id>C38AC175-333B-4B1B-972F-5684D94A72B3</gtr:id><gtr:impact>Genetic Improvement (GI) aims to find improved versions of existing programs that retain some partial semantics of the original (and possibly some of its syntax too). GI has been used to improve many system aspects such as its correctness (through bug fixing) and resource consumption such as time, memory and energy. It has also been used for other kinds of improvement such as specialising and porting. Many and varied techniques have proved successful at improving programs, such as loop perforation, genetic programming, guided random search, transplantation and constraint-based synthesis. This workshop will bring together researchers working on Search Based Software Engineering (SBSE), Program Synthesis, Genetic Programming, Program Analysis and Manipulation. We will explore the possible applications, development of techniques, evaluation and theory. Funding for the workshop is provided by the EPSRC projects DAASE (http://daase.cs.ucl.ac.uk) and GGGP.</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://crest.cs.ucl.ac.uk/cow/45/</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>XIVth International Conference on Parallel Problem Solving from Nature</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>National</gtr:geographicReach><gtr:id>E282D2CF-2419-413C-B555-D38A949E0831</gtr:id><gtr:impact>PPSN 2016, the 14th International Conference on Parallel Problem Solving from Nature (PPSN
XIV). This biennial event constitutes one of the most important and highly regarded international conferences
in nature-inspired computation, ranging from evolutionary computation and robotics to artificial life and
metaheuristics. Continuing with a tradition that started in Dortmund in 1990, PPSN XIV was held during
September 17-21, 2016, in Edinburgh, Scotland, UK, organised by Edinburgh Napier University.</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://www.ppsn2016.org/conference/wp-content/uploads/2016/09/PPSN-Conference-Booklet.pdf</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Special Session at 2016 IEEE World Congress on Computational Intelligence - Genetic Improvement of Software + Search-Based Software Engineering</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>National</gtr:geographicReach><gtr:id>E2B59119-EAA3-4FAA-8D8C-4D2AFCDA4592</gtr:id><gtr:impact>In the past ten years there has been a dramatic increase in work on Search-Based Software Engineering (SBSE), an approach to software engineering in which search-based optimisation algorithms are used to address problems. The approach is attractive because it offers a suite of adaptive automated and semi-automated solutions in situations typified by large complex problem spaces with multiple competing and conflicting objectives. SBSE has been applied to a number of software engineering activities, right across the life-cycle from requirements engineering, project planning and cost estimation through testing, to automated maintenance, service-oriented software engineering, compiler optimisation and quality assessment. 

With this special session, we are providing an opportunity to showcase recent breakthroughs in this field. 

Scope and Topics

We invite submissions on any aspect of SBSE, including, but not limited to, theoretical results and interesting new applications. The suggested topics cover the entire range of functional and non-functional properties:

bandwidth minimisation
latency minimisation
fitness optimisation
energy optimisation
software specialisation
memory optimisation
software transplantation
bug fixing
multi-objective SE optimisation</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://www.wcci2016.org/programs.php?id=home</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Genetically Improved Software Seminar, Brunel Software Engineering Laboratory, Brunel University</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>2DD60746-8F8D-44B4-8AED-4308308D6D7C</gtr:id><gtr:impact>Genetically Improved Software Seminar, Brunel Software Engineering Laboratory, Brunel University</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://www.brunel-sweng.org/?page_id=92</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput><gtr:disseminationOutput><gtr:description>Seminar Exeter University - Optimizing Existing Software With Genetic Programming</gtr:description><gtr:form>Participation in an activity, workshop or similar</gtr:form><gtr:geographicReach>Regional</gtr:geographicReach><gtr:id>E4C1D428-42BF-4117-A70E-C993929783A3</gtr:id><gtr:impact>Monday 29 Feb 2016: Optimizing Existing Software With Genetic Programming
Bill Langdon - UCL
H170 15:30-16:30

Genetic Improvement (GI) uses modern search based software engineering

(SBSE) techniques such as Genetic Programming (GP), to optimise

existing programs.? I plan to start with an introduction to genetic

programming. Then give very brief descriptions of early GP work on

evolving software from scratch and recent work on automatic bug fixing.



Part of the motivation for GI is that customising software for

different users, different hardware, different trade-offs between

resources consumption (eg memory, speed, battery life) and quality,

is at least as difficult and labour intensive as many other programming

tasks and yet (we shall see) is at least partly automatable.



Mostly I will concentrate on examples, such as given by the paper

doi:10.1109/TEVC.2013.2281544 of the same name as the talk. Here GI

automatically customised existing programs to give considerable speed

ups with little lost in accuracy by evolving a new version of the

program tailored to special cases.</gtr:impact><gtr:partOfOfficialScheme>false</gtr:partOfOfficialScheme><gtr:primaryAudience>Postgraduate students</gtr:primaryAudience><gtr:url>http://emps.exeter.ac.uk/computer-science/news/event/?semID=1783&amp;dateID=4267</gtr:url><gtr:year>2016</gtr:year></gtr:disseminationOutput></gtr:disseminationOutputs><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>The genetic improvement to the chief in the project have been deployed by IBM and other smaller biotech companies. The genetically improved version of barracuda has been downloaded over 2000 times</gtr:description><gtr:firstYearOfImpact>2016</gtr:firstYearOfImpact><gtr:id>11D94E99-E58D-459B-91CB-21E70502595D</gtr:id><gtr:impactTypes/><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We have achieved breakthroughs in the improvement of the efficiency of software systems through genetic improvement</gtr:description><gtr:exploitationPathways>This can improve the efficiency of software systems</gtr:exploitationPathways><gtr:id>09B6DF56-2AA4-4C92-9475-5B1FE653EFA1</gtr:id><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://www0.cs.ucl.ac.uk/staff/w.langdon/gggp/</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs><gtr:researchMaterialOutput><gtr:description>Trying all hopeful high order mutations to source code shows none of the first order schema of triangle software engineering benchmark are deceptive. Indeed these unit blocks lead to all global optima. Suggesting program improvements may not be as hard to find as is often assumed.</gtr:description><gtr:id>C3272009-97D9-4639-8CE8-BF2938C79E13</gtr:id><gtr:impact>Although the triangle program is small, the number of possible triangle programs is huge. We have fully
explored a regular subset of it. We reduced the size of its search space by considering only potential
improvements to the existing code made by replacing its comparisons and by restricting the comparator
mutations. This enabled us to analyse a systematic subset of the whole improvement fitness landscape.
Solutions in the subset will still be solutions in the full problem. There are many solutions all of which are
readily found by first order schema analysis. Suggesting the program fitness landscape is not as difficult to
search as is often assumed.</gtr:impact><gtr:providedToOthers>false</gtr:providedToOthers><gtr:title>High order mutations of the Triangle Program</gtr:title><gtr:type>Improvements to research infrastructure</gtr:type><gtr:url>http://www0.cs.ucl.ac.uk/staff/W.Langdon/ftp/gp-code/triangle.tar.gz</gtr:url></gtr:researchMaterialOutput></gtr:researchMaterialOutputs><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/B7086F7F-BADF-4E6E-B264-2834B9A62F4A"><gtr:id>B7086F7F-BADF-4E6E-B264-2834B9A62F4A</gtr:id><gtr:title>Parallel Problem Solving from Nature - PPSN XIV</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>978-3-319-45822-9</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C634EF0A-481B-4D50-81B8-9CA1367041DA"><gtr:id>C634EF0A-481B-4D50-81B8-9CA1367041DA</gtr:id><gtr:title>Inferring Automatic Test Oracles</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/af5e1c35286424eaa77ab6e20384d60d"><gtr:id>af5e1c35286424eaa77ab6e20384d60d</gtr:id><gtr:otherNames>Langdon WB</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/B8C36EFA-1AB0-4A10-AF01-A58C43025387"><gtr:id>B8C36EFA-1AB0-4A10-AF01-A58C43025387</gtr:id><gtr:title>Fun and games at IEEE WCCI 2016, Vancouver, Canada</gtr:title><gtr:parentPublicationTitle>ACM SIGEVOlution</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/2A723710-BA48-4A11-8565-EF16FA564566"><gtr:id>2A723710-BA48-4A11-8565-EF16FA564566</gtr:id><gtr:title>Genetic improvement: A key challenge for evolutionary computation</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C1FD6E67-34EC-4BDC-89ED-9C27AEFC66DF"><gtr:id>C1FD6E67-34EC-4BDC-89ED-9C27AEFC66DF</gtr:id><gtr:title>First Complex Systems Digital Campus World E-Conference 2015</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date><gtr:isbn>978-3-319-45900-4</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/F5C03983-D359-45C6-9B57-EA7BA4D40E19"><gtr:id>F5C03983-D359-45C6-9B57-EA7BA4D40E19</gtr:id><gtr:title>Learn to live with academic rankings</gtr:title><gtr:parentPublicationTitle>Communications of the ACM</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/bb0fb7b71cac8218800826868b821efc"><gtr:id>bb0fb7b71cac8218800826868b821efc</gtr:id><gtr:otherNames>CACM Staff</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/3406F403-B9AB-447C-90A8-C7884788F3DD"><gtr:id>3406F403-B9AB-447C-90A8-C7884788F3DD</gtr:id><gtr:title>Benchmarking Genetically Improved BarraCUDA on Epigenetic Methylation NGS datasets and nVidia GPUs</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>9781450343237</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/9327BC2E-393A-4E47-8D0F-91F58D616E74"><gtr:id>9327BC2E-393A-4E47-8D0F-91F58D616E74</gtr:id><gtr:title>Parallel Problem Solving from Nature - PPSN XIV</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>978-3-319-45822-9</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/39D1C8B1-3FAB-4F97-AA55-F310CAE5DDC3"><gtr:id>39D1C8B1-3FAB-4F97-AA55-F310CAE5DDC3</gtr:id><gtr:title>Genetic Improvement</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/af5e1c35286424eaa77ab6e20384d60d"><gtr:id>af5e1c35286424eaa77ab6e20384d60d</gtr:id><gtr:otherNames>Langdon WB</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/57D3F781-8396-400C-AF2E-9A7E1715E130"><gtr:id>57D3F781-8396-400C-AF2E-9A7E1715E130</gtr:id><gtr:title>Benchmarking BarraCUDA on Epigenetic DNA and nVidia Pascal GPUs</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/E4148925-EA87-435C-BBAF-79FC184DE931"><gtr:id>E4148925-EA87-435C-BBAF-79FC184DE931</gtr:id><gtr:title>The Genetic Improvement Fitness Landscape</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/af5e1c35286424eaa77ab6e20384d60d"><gtr:id>af5e1c35286424eaa77ab6e20384d60d</gtr:id><gtr:otherNames>Langdon WB</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/2EE4E8D5-A5F0-41E3-A7CC-B0DD1D8FD6B9"><gtr:id>2EE4E8D5-A5F0-41E3-A7CC-B0DD1D8FD6B9</gtr:id><gtr:title>Fitness Landscape of the Triangle Program</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/af5e1c35286424eaa77ab6e20384d60d"><gtr:id>af5e1c35286424eaa77ab6e20384d60d</gtr:id><gtr:otherNames>Langdon WB</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/161E19F5-4038-4FCA-9F6E-B859D19928CA"><gtr:id>161E19F5-4038-4FCA-9F6E-B859D19928CA</gtr:id><gtr:title>Search Based Software Engineering</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>978-3-319-47105-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/431A06FC-730E-4963-96B1-3382B25F4CE9"><gtr:id>431A06FC-730E-4963-96B1-3382B25F4CE9</gtr:id><gtr:title>Exact Mean Absolute Error of Baseline Predictor, MARP0</gtr:title><gtr:parentPublicationTitle>Information and Software Technology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C979A973-BFE2-422E-82E9-548C85D2E508"><gtr:id>C979A973-BFE2-422E-82E9-548C85D2E508</gtr:id><gtr:title>BarraCUDA in the Cloud</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/af5e1c35286424eaa77ab6e20384d60d"><gtr:id>af5e1c35286424eaa77ab6e20384d60d</gtr:id><gtr:otherNames>Langdon WB</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/F08004AC-35AC-44AA-B14F-8156535D1B73"><gtr:id>F08004AC-35AC-44AA-B14F-8156535D1B73</gtr:id><gtr:title>Genetic improvement of GPU software</gtr:title><gtr:parentPublicationTitle>Genetic Programming and Evolvable Machines</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/65e64c8dc5809e262757466a749d689d"><gtr:id>65e64c8dc5809e262757466a749d689d</gtr:id><gtr:otherNames>Langdon W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/M025853/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>