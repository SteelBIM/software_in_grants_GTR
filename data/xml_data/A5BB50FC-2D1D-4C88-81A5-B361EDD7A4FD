<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/818CD6C9-61EE-41F2-9F37-0C7A8F43E25D"><gtr:id>818CD6C9-61EE-41F2-9F37-0C7A8F43E25D</gtr:id><gtr:name>University of Birmingham</gtr:name><gtr:department>School of Computer Science</gtr:department><gtr:address><gtr:line1>Edgbaston Park Road</gtr:line1><gtr:line2>Edgbaston</gtr:line2><gtr:postCode>B15 2TT</gtr:postCode><gtr:region>West Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/818CD6C9-61EE-41F2-9F37-0C7A8F43E25D"><gtr:id>818CD6C9-61EE-41F2-9F37-0C7A8F43E25D</gtr:id><gtr:name>University of Birmingham</gtr:name><gtr:address><gtr:line1>Edgbaston Park Road</gtr:line1><gtr:line2>Edgbaston</gtr:line2><gtr:postCode>B15 2TT</gtr:postCode><gtr:region>West Midlands</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/E3467D80-13A7-4C31-B14D-CC4C3B12086F"><gtr:id>E3467D80-13A7-4C31-B14D-CC4C3B12086F</gtr:id><gtr:firstName>Dan</gtr:firstName><gtr:otherNames>R</gtr:otherNames><gtr:surname>Ghica</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FD034906%2F1"><gtr:id>A5BB50FC-2D1D-4C88-81A5-B361EDD7A4FD</gtr:id><gtr:title>Modular Abstraction and Abstraction Refinement: A Game-Semantic Approach</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/D034906/1</gtr:grantReference><gtr:abstractText>Computer programs often have errors. Detecting errors in computer programs has always been a central problem of computer science. In recent years a technique called 'model checking' was developed in order to find such errors automatically. This technique applies best to programs that are small and comparatively simple. To verify larger programs we need to break them up into smaller parts called sub-programs. Unfortunately, the technique of model checking does not work well for sub-programs, but only for whole programs. In other words, it is not 'modular.'We propose to enhance software model checking using the theory of 'game semantics,' a new theory that provides precise mathematical models for computer programs. The models are modular, so they work for sub-programs, therefore can be used to verify large programs.The techniques used in model checking cannot be used to handle the models provided by game semantics. Our main objective is to adapt these techniques to game semantics, as well as to invent new techniques suitable to game semantics. If our project is successful we should be able to develop an enhanced ability to verify larger programs in a modular way.</gtr:abstractText><gtr:fund><gtr:end>2008-11-30</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2006-03-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>128758</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>Several experimental automated verification tools based on game semantics have been developed. This had influence on the work of the &amp;quot;higher-order model checking&amp;quot; group in Oxford, led by Prof. Ong. The work was theoretical and foundational so the impact is only academic.</gtr:description><gtr:id>60E1B5AE-E091-420F-B182-516DE11D0C84</gtr:id><gtr:impactTypes/></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We have discovered that game semantics can be used to model and verify software compositionally, that is certain properties of the whole program can be determined by examining parts of the program.</gtr:description><gtr:exploitationPathways>Our verification tools and theories can be expanded on in terms of performance and features. In fact a research group in Oxford led by Prof. Ong has done just that.</gtr:exploitationPathways><gtr:id>6D1F6F6D-D161-418F-B03D-C080935795E8</gtr:id><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/4EB6E787-EA53-438D-A19E-B00E45367CC2"><gtr:id>4EB6E787-EA53-438D-A19E-B00E45367CC2</gtr:id><gtr:title>Tools and Algorithms for the Construction and Analysis of Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/07ae15f102e9a6e367373f0467adc51d"><gtr:id>07ae15f102e9a6e367373f0467adc51d</gtr:id><gtr:otherNames>Bakewell A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date><gtr:isbn>978-3-540-78799-0</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/5008965D-2433-4D79-B9DD-2425FBBBD59F"><gtr:id>5008965D-2433-4D79-B9DD-2425FBBBD59F</gtr:id><gtr:title>Angelic semantics of fine-grained concurrency</gtr:title><gtr:parentPublicationTitle>Annals of Pure and Applied Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2008-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/7CB38ECF-28F6-4AAD-AC8A-D2CE631B7D7E"><gtr:id>7CB38ECF-28F6-4AAD-AC8A-D2CE631B7D7E</gtr:id><gtr:title>Tools and Algorithms for the Construction and Analysis of Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2006-01-01</gtr:date><gtr:isbn>978-3-540-33056-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/98193BBD-85E7-4CE6-8C18-7D918D9007D9"><gtr:id>98193BBD-85E7-4CE6-8C18-7D918D9007D9</gtr:id><gtr:title>Geometry of synthesis</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2007-01-01</gtr:date><gtr:isbn>1595935754</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/80497FEB-2B72-4B23-9BF5-646218CCEA54"><gtr:id>80497FEB-2B72-4B23-9BF5-646218CCEA54</gtr:id><gtr:title>Syntactic control of concurrency</gtr:title><gtr:parentPublicationTitle>Theoretical Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/43c63c09be212b7de9e82cb699c15869"><gtr:id>43c63c09be212b7de9e82cb699c15869</gtr:id><gtr:otherNames>Ghica D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2006-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/B2E1121C-17F5-4A3E-BBDA-1AC5A556388B"><gtr:id>B2E1121C-17F5-4A3E-BBDA-1AC5A556388B</gtr:id><gtr:title>Game-based safety checking with Mage</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/07ae15f102e9a6e367373f0467adc51d"><gtr:id>07ae15f102e9a6e367373f0467adc51d</gtr:id><gtr:otherNames>Bakewell A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2007-01-01</gtr:date><gtr:isbn>9781595937216</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C07866F7-522E-44E3-BDAC-3B6C047718E2"><gtr:id>C07866F7-522E-44E3-BDAC-3B6C047718E2</gtr:id><gtr:title>Model Checking Software</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/b93c47b2d86e198fee9ea21af2db6c85"><gtr:id>b93c47b2d86e198fee9ea21af2db6c85</gtr:id><gtr:otherNames>Dimovski A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2006-01-01</gtr:date><gtr:isbn>978-3-540-33102-5</gtr:isbn></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/D034906/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>50</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>