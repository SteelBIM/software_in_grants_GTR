<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/03D8AFBB-3EA5-4885-B036-BD4F9F4F9849"><gtr:id>03D8AFBB-3EA5-4885-B036-BD4F9F4F9849</gtr:id><gtr:name>University of Sheffield</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>Firth Court</gtr:line1><gtr:line2>Western Bank</gtr:line2><gtr:line4>Sheffield</gtr:line4><gtr:line5>South Yorkshire</gtr:line5><gtr:postCode>S10 2TN</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/03D8AFBB-3EA5-4885-B036-BD4F9F4F9849"><gtr:id>03D8AFBB-3EA5-4885-B036-BD4F9F4F9849</gtr:id><gtr:name>University of Sheffield</gtr:name><gtr:address><gtr:line1>Firth Court</gtr:line1><gtr:line2>Western Bank</gtr:line2><gtr:line4>Sheffield</gtr:line4><gtr:line5>South Yorkshire</gtr:line5><gtr:postCode>S10 2TN</gtr:postCode><gtr:region>Yorkshire and The Humber</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/E2F7C725-C309-41B1-8500-820BA5383443"><gtr:id>E2F7C725-C309-41B1-8500-820BA5383443</gtr:id><gtr:firstName>Georg</gtr:firstName><gtr:surname>Struth</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/6D4566BB-0EB2-4A62-8E47-0FCA535DF01C"><gtr:id>6D4566BB-0EB2-4A62-8E47-0FCA535DF01C</gtr:id><gtr:firstName>John</gtr:firstName><gtr:surname>Derrick</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FJ003727%2F1"><gtr:id>60DDC58C-4A9E-41B4-8BF8-8D14C43819A9</gtr:id><gtr:title>Verifying Concurrent Lock-free Algorithms</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/J003727/1</gtr:grantReference><gtr:abstractText>Software is becoming increasingly complex, and the demand for increased performance is driven by many diverse applications. As a response to this demand, concurrent software that efficiently exploits multi-core architectures is likely to be the norm in many sectors. However, developing correct concurrent algorithms is a difficult task. This is particularly true for a class of concurrent algorithms that fully exploit the potential concurrency by offering the maximum amount of interleavings of different processes working on a shared memory. There is then a real economic imperative to build techniques that can verify as correct such lock-free algorithms as they are known.

Testing and simulation, while valuable and automated to a degree, are ultimately limited in the guarantees they can offer for correctness, particularly in the case of concurrent algorithms, where multiple thread interleavings act on data structures potentially unbounded in size. Formal verification of this class of algorithm is becoming tractable and there has been a surge of interest in applying such techniques, and a unique opportunity to verify a class of algorithms before their widespread adoption.

This project focusses on lock-free algorithms (also called non-blocking algorithms). Lock-free algorithms have been discovered for many common data structures. Non-blocking algorithms are used extensively at the operating system and JVM level for tasks such as thread and process scheduling. While they are more complicated to implement, they have a number of advantages over lock-based alternatives -- hazards like priority inversion and deadlock are avoided, contention is less expensive, and coordination occurs at a finer level of granularity, enabling a higher degree of parallelism.

This project seeks to develop techniques whereby such algorithms can be proved correct. The techniques are based on the notion of refinement which relates an abstract specification with a more detailed concrete implementation. What we will do here is show that a certain type of refinement between an abstract description and a concurrent algorithm implies that the concurrent algorithm is correct. The notion of correctness here being linearizability.

Part of the novelty of what we propose to do is in the construction of the right sort of refinement relation - it has to be one that will imply linearizability, yet at the same time give rise to proof obligations that are tractable for specific algorithms, that is, actually make the verification of linearizability easier to achieve. Another part of the novelty is that we will mechanize the whole thing - both the proofs for specific algorithms, but also the proof that our technique is correct, thus giving an extra level of assurance that the techniques really are sound - the details are sufficiently complex and subtle that mechanization really is necessary to be 100% sure of correctness.

In addition to these basics we want a proof method that is applicable to a wide range of algorithms, and one that is compositional. To aid applicability we develop two flavours of technique - one based on forward simulation, and another based on backward simulation, as well as specific support for unboundedness and dynamic linearization points. To aid compositionality (so that the proofs can be broken down into smaller local steps rather than undertaking one large global proof) we will develop thread modular simulation conditions, and interference freedom conditions that aid the process.

Our work will be evaluated on a number of 'benchmark' algorithms, such as lock-free implementations of stacks, queues, hashtables etc. Finally, we will investigate how our proof methods can be shown to be complete, that is, every algorithm could potentially be verified by using the method. We will also investigate liveness, ie, showing that a concurrent algorithm guarantees various forms of progression.</gtr:abstractText><gtr:potentialImpactText>As detailed in the 'pathways to impact', we would hope that this work has impact in a number of ways.

In terms of the specifics of the proposal the work will provide generic proof methods by which to show that concurrent algorithms are correct. This will contribute to the rapid recent interest in showing that concurrent algorithms are linearizable. In addition, we will verify that some specific algorithms are correct, with a fully mechanised proof of their correctness.

The detailed technical novelty in our work includes the following:
- a technique for verifying linearizability that can be shown to be sound,
- applicable when a process is linearized by another process, and one which can't be determined by looking forward,
- applicable to arbitrary data-structures,
- local reasoning for global properties and that supports reasoning at a local level of tightly coupled inter-process behaviour

And this will impact directly on those working in refinement, formal methods and simulation-based approaches to lock-free algorithms.

Although this project revolves around concurrent algorithms, the research will
have an impact on a much broader range of communities.
Specifically, those working on mechanized verification in numerous fields and the use of refinement will benefit from the work of the project. This impact will take place mostly through the academic research community.

In a wider context the technical contribution of our work will be felt in the mechanized proof community as well as in other communities striving to verify concurrent algorithms, such as those working on shape analysis and separation logic.

In our plans we have included a wide range of potential dissemination venues covering different research communities in order to engage with those for which this work might have an impact. This includes general formal methods forums, as well as those whose interest lies in refinement or verification of concurrent algorithms. We have costed for a number of activities (eg visits to Microsoft Cambridge) to further opportunities to collaborate on shared approaches. 

In addition, we plan, via our German collaborators, to run a Dagstuhl seminar (see http://www.dagstuhl.de/en/about-dagstuhl/) bringing together those developing concurrent algorithms with those interested in their verification. Dagstuhl seminars are unique events allowing one to concentrate on the exploration of a research topic in depth, and typically involve around 30-40 academic and industrial participants. The inclusion of our German partners in this proposal, gives us a unique opportunity to run such an event.</gtr:potentialImpactText><gtr:fund><gtr:end>2015-10-18</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2012-04-19</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>378905</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs/><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/525B53B9-AAEC-401E-B58B-9B3CA3DBA9B6"><gtr:id>525B53B9-AAEC-401E-B58B-9B3CA3DBA9B6</gtr:id><gtr:title>Integrated Formal Methods</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/83fb7847f532aa9e93a8a5efbeb18e29"><gtr:id>83fb7847f532aa9e93a8a5efbeb18e29</gtr:id><gtr:otherNames>Taylor R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-38612-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/9531B20B-1EC2-46BE-B810-2F13AAE3C7A7"><gtr:id>9531B20B-1EC2-46BE-B810-2F13AAE3C7A7</gtr:id><gtr:title>Convolution as a Unifying Concept</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Computational Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/142dc9ea8c15ac8e8fb4a19adad12a84"><gtr:id>142dc9ea8c15ac8e8fb4a19adad12a84</gtr:id><gtr:otherNames>Dongol B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/D0CA7BA2-4FF1-44E9-BC1F-8FE7B6B6536B"><gtr:id>D0CA7BA2-4FF1-44E9-BC1F-8FE7B6B6536B</gtr:id><gtr:title>Inferring Extended Finite State Machine models from software executions</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/c4c3e0a6c94d799746ed103c7fa08a77"><gtr:id>c4c3e0a6c94d799746ed103c7fa08a77</gtr:id><gtr:otherNames>Walkinshaw N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/E2C565F6-E96B-4487-8F03-DADC00DA4BAD"><gtr:id>E2C565F6-E96B-4487-8F03-DADC00DA4BAD</gtr:id><gtr:title>Editorial</gtr:title><gtr:parentPublicationTitle>Formal Aspects of Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/9580ae2a96c96eee7cf306e8c1e9c7e5"><gtr:id>9580ae2a96c96eee7cf306e8c1e9c7e5</gtr:id><gtr:otherNames>Boiten E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/3505B71C-97FC-4C70-A812-9149312502B8"><gtr:id>3505B71C-97FC-4C70-A812-9149312502B8</gtr:id><gtr:title>Integrated Formal Methods</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/0023abac1f92a8b91b2b353e7d21f339"><gtr:id>0023abac1f92a8b91b2b353e7d21f339</gtr:id><gtr:otherNames>Derrick J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-319-10180-4</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/6179586F-1491-404F-AAE3-15C07093D889"><gtr:id>6179586F-1491-404F-AAE3-15C07093D889</gtr:id><gtr:title>Verifying linearizability: A comparative survey</gtr:title><gtr:parentPublicationTitle>ArXiv e-prints</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/d25faa5232a1a10141a64919b88d573a"><gtr:id>d25faa5232a1a10141a64919b88d573a</gtr:id><gtr:otherNames>Dongol Brijesh</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/48BE37FD-CF88-4457-AE4F-DCDCDFB907C4"><gtr:id>48BE37FD-CF88-4457-AE4F-DCDCDFB907C4</gtr:id><gtr:title>Reasoning about goal-directed real-time teleo-reactive programs</gtr:title><gtr:parentPublicationTitle>Formal Aspects of Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/142dc9ea8c15ac8e8fb4a19adad12a84"><gtr:id>142dc9ea8c15ac8e8fb4a19adad12a84</gtr:id><gtr:otherNames>Dongol B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/25216123-090A-46AD-B162-E95D4914D0E9"><gtr:id>25216123-090A-46AD-B162-E95D4914D0E9</gtr:id><gtr:title>Theoretical Aspects of Computing - ICTAC 2014</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/142dc9ea8c15ac8e8fb4a19adad12a84"><gtr:id>142dc9ea8c15ac8e8fb4a19adad12a84</gtr:id><gtr:otherNames>Dongol B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/A9CD9A2B-37DD-45F6-88FF-44D5E94798B6"><gtr:id>A9CD9A2B-37DD-45F6-88FF-44D5E94798B6</gtr:id><gtr:title>Comparing Degrees of Non-Determinism in Expression Evaluation</gtr:title><gtr:parentPublicationTitle>The Computer Journal</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/379efbdc3bfe6c245b5a55af2f9389d1"><gtr:id>379efbdc3bfe6c245b5a55af2f9389d1</gtr:id><gtr:otherNames>Hayes I</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/9F4ED0EB-1D11-42EB-AE6F-8089CD7EF94D"><gtr:id>9F4ED0EB-1D11-42EB-AE6F-8089CD7EF94D</gtr:id><gtr:title>From ODP viewpoint consistency to Integrated Formal Methods</gtr:title><gtr:parentPublicationTitle>Computer Standards &amp; Interfaces</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/9580ae2a96c96eee7cf306e8c1e9c7e5"><gtr:id>9580ae2a96c96eee7cf306e8c1e9c7e5</gtr:id><gtr:otherNames>Boiten E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/541A24FA-0F6A-4B2E-AEEA-E2177E6B35DD"><gtr:id>541A24FA-0F6A-4B2E-AEEA-E2177E6B35DD</gtr:id><gtr:title>Editorial</gtr:title><gtr:parentPublicationTitle>Formal Aspects of Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/9580ae2a96c96eee7cf306e8c1e9c7e5"><gtr:id>9580ae2a96c96eee7cf306e8c1e9c7e5</gtr:id><gtr:otherNames>Boiten E</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/DD7A41B5-C9F0-4867-908F-4C94042A05A0"><gtr:id>DD7A41B5-C9F0-4867-908F-4C94042A05A0</gtr:id><gtr:title>Fractional Permissions and Non-Deterministic Evaluators in Interval Temporal Logic</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/6a65190271930fb018ae14f4c5e6e9d3"><gtr:id>6a65190271930fb018ae14f4c5e6e9d3</gtr:id><gtr:otherNames>John Derrick (Author)</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/F76BA1FF-B13F-40AB-A0AC-DC6E2941ED57"><gtr:id>F76BA1FF-B13F-40AB-A0AC-DC6E2941ED57</gtr:id><gtr:title>Verifying Linearisability</gtr:title><gtr:parentPublicationTitle>ACM Computing Surveys</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/142dc9ea8c15ac8e8fb4a19adad12a84"><gtr:id>142dc9ea8c15ac8e8fb4a19adad12a84</gtr:id><gtr:otherNames>Dongol B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/6FE104C1-4078-47F5-A319-0231CDBAB7AC"><gtr:id>6FE104C1-4078-47F5-A319-0231CDBAB7AC</gtr:id><gtr:title>Reasoning algebraically about refinement on TSO architectures</gtr:title><gtr:parentPublicationTitle>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/23c7523271b897b2332648ab2cd8b0b5"><gtr:id>23c7523271b897b2332648ab2cd8b0b5</gtr:id><gtr:otherNames>Dongol B.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:issn>16113349</gtr:issn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/D31F2706-B8D1-4360-98D3-D78DCC1560A0"><gtr:id>D31F2706-B8D1-4360-98D3-D78DCC1560A0</gtr:id><gtr:title>Simplifying proofs of linearisability using layers of abstraction</gtr:title><gtr:parentPublicationTitle>ArXiv e-prints</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/d25faa5232a1a10141a64919b88d573a"><gtr:id>d25faa5232a1a10141a64919b88d573a</gtr:id><gtr:otherNames>Dongol Brijesh</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/FCFD565B-D3FD-4B30-A5D4-02D91FB0ACA8"><gtr:id>FCFD565B-D3FD-4B30-A5D4-02D91FB0ACA8</gtr:id><gtr:title>Deriving real-time action systems with multiple time bands using algebraic reasoning</gtr:title><gtr:parentPublicationTitle>Science of Computer Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/142dc9ea8c15ac8e8fb4a19adad12a84"><gtr:id>142dc9ea8c15ac8e8fb4a19adad12a84</gtr:id><gtr:otherNames>Dongol B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/2639B6F3-0CE2-45D7-BD52-704DF5C09B9C"><gtr:id>2639B6F3-0CE2-45D7-BD52-704DF5C09B9C</gtr:id><gtr:title>Synapse</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/5d42b3ff7a97bd9129bac25151cbfb5d"><gtr:id>5d42b3ff7a97bd9129bac25151cbfb5d</gtr:id><gtr:otherNames>Lamela Seijas P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>9781450330381</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/D9D3DE5F-DE3E-4030-B59F-D06E64618A68"><gtr:id>D9D3DE5F-DE3E-4030-B59F-D06E64618A68</gtr:id><gtr:title>Data refinement for true concurrency</gtr:title><gtr:parentPublicationTitle>ArXiv e-prints</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/d25faa5232a1a10141a64919b88d573a"><gtr:id>d25faa5232a1a10141a64919b88d573a</gtr:id><gtr:otherNames>Dongol Brijesh</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/BB993875-7034-4B3E-BDEB-CC71E69B184F"><gtr:id>BB993875-7034-4B3E-BDEB-CC71E69B184F</gtr:id><gtr:title>Relational concurrent refinement part III: traces, partial relations and automata</gtr:title><gtr:parentPublicationTitle>Formal Aspects of Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/0023abac1f92a8b91b2b353e7d21f339"><gtr:id>0023abac1f92a8b91b2b353e7d21f339</gtr:id><gtr:otherNames>Derrick J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/0573AA22-742C-4313-B2D5-F2C29700AA6D"><gtr:id>0573AA22-742C-4313-B2D5-F2C29700AA6D</gtr:id><gtr:title>Hardware and Software: Verification and Testing</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/0023abac1f92a8b91b2b353e7d21f339"><gtr:id>0023abac1f92a8b91b2b353e7d21f339</gtr:id><gtr:otherNames>Derrick J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/620B6BFA-D467-4A15-A4A8-A914345DE19B"><gtr:id>620B6BFA-D467-4A15-A4A8-A914345DE19B</gtr:id><gtr:title>Proceedings 16th International Refinement Workshop</gtr:title><gtr:parentPublicationTitle>ArXiv e-prints</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/ef7bd674e46e75cf0751875acecc3521"><gtr:id>ef7bd674e46e75cf0751875acecc3521</gtr:id><gtr:otherNames>Derrick John</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/F7711815-7668-473D-BA00-6249CABB3284"><gtr:id>F7711815-7668-473D-BA00-6249CABB3284</gtr:id><gtr:title>Theoretical Aspects of Computing - ICTAC 2013</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/142dc9ea8c15ac8e8fb4a19adad12a84"><gtr:id>142dc9ea8c15ac8e8fb4a19adad12a84</gtr:id><gtr:otherNames>Dongol B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-39717-2</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/27211357-1134-459B-9691-B91210348B23"><gtr:id>27211357-1134-459B-9691-B91210348B23</gtr:id><gtr:title>FM 2014: Formal Methods</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/0023abac1f92a8b91b2b353e7d21f339"><gtr:id>0023abac1f92a8b91b2b353e7d21f339</gtr:id><gtr:otherNames>Derrick J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-319-06409-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/69AE5DEF-0AA7-412D-BA5F-9FAC65B96BA0"><gtr:id>69AE5DEF-0AA7-412D-BA5F-9FAC65B96BA0</gtr:id><gtr:title>Interval-based data refinement: A uniform approach to true concurrency in discrete and real-time systems</gtr:title><gtr:parentPublicationTitle>Science of Computer Programming</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/142dc9ea8c15ac8e8fb4a19adad12a84"><gtr:id>142dc9ea8c15ac8e8fb4a19adad12a84</gtr:id><gtr:otherNames>Dongol B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/62E2E4F0-00FE-4A77-B735-459DD54625CF"><gtr:id>62E2E4F0-00FE-4A77-B735-459DD54625CF</gtr:id><gtr:title>Testing Software and Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/83fb7847f532aa9e93a8a5efbeb18e29"><gtr:id>83fb7847f532aa9e93a8a5efbeb18e29</gtr:id><gtr:otherNames>Taylor R</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-34690-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/473806FE-168D-40D5-B351-2D7B3ABEA2C5"><gtr:id>473806FE-168D-40D5-B351-2D7B3ABEA2C5</gtr:id><gtr:title>Experiences using Z2SAL</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/712f1fc1d7412c7c18210734a1e6fc89"><gtr:id>712f1fc1d7412c7c18210734a1e6fc89</gtr:id><gtr:otherNames>Siregar M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/9A10F675-51E8-445A-AEC3-288EEEAE3546"><gtr:id>9A10F675-51E8-445A-AEC3-288EEEAE3546</gtr:id><gtr:title>Computer Aided Verification</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/39932a3293cd0b8ef5bc628214a9378b"><gtr:id>39932a3293cd0b8ef5bc628214a9378b</gtr:id><gtr:otherNames>Schellhorn G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-31423-0</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/8ACECC23-4701-4511-AC00-7ACADC975F3F"><gtr:id>8ACECC23-4701-4511-AC00-7ACADC975F3F</gtr:id><gtr:title>A Sound and Complete Proof Technique for Linearizability of Concurrent Data Structures</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Computational Logic</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/39932a3293cd0b8ef5bc628214a9378b"><gtr:id>39932a3293cd0b8ef5bc628214a9378b</gtr:id><gtr:otherNames>Schellhorn G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/F4236E3B-6998-42E7-A1D0-45B0B563FEF8"><gtr:id>F4236E3B-6998-42E7-A1D0-45B0B563FEF8</gtr:id><gtr:title>Using coarse-grained abstractions to verify linearizability on TSO architectures</gtr:title><gtr:parentPublicationTitle>Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/c13462417c7b5deef9144644221b0b89"><gtr:id>c13462417c7b5deef9144644221b0b89</gtr:id><gtr:otherNames>Derrick J.</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:issn>16113349</gtr:issn></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/J003727/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>