<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.rcuk.ac.uk:80/organisation/61241628-2642-4A10-AC5B-41FA8E9DC9CB"><gtr:id>61241628-2642-4A10-AC5B-41FA8E9DC9CB</gtr:id><gtr:name>Network for Sustainable Ultrascale Computing (NESUS)</gtr:name></gtr:collaborator><gtr:collaborator url="http://gtr.rcuk.ac.uk:80/organisation/9AD8F588-B74D-4777-9E1A-0F0FF29D5D91"><gtr:id>9AD8F588-B74D-4777-9E1A-0F0FF29D5D91</gtr:id><gtr:name>EC FP7 Collaborative projects</gtr:name></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:department>Computer Laboratory</gtr:department><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/D1774113-D5D2-4B7C-A412-66A90FE4B96F"><gtr:id>D1774113-D5D2-4B7C-A412-66A90FE4B96F</gtr:id><gtr:name>University of Cambridge</gtr:name><gtr:address><gtr:line1>Lensfield Road</gtr:line1><gtr:line4>Cambridge</gtr:line4><gtr:postCode>CB2 1EW</gtr:postCode><gtr:region>East of England</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/61241628-2642-4A10-AC5B-41FA8E9DC9CB"><gtr:id>61241628-2642-4A10-AC5B-41FA8E9DC9CB</gtr:id><gtr:name>Network for Sustainable Ultrascale Computing (NESUS)</gtr:name><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/9AD8F588-B74D-4777-9E1A-0F0FF29D5D91"><gtr:id>9AD8F588-B74D-4777-9E1A-0F0FF29D5D91</gtr:id><gtr:name>EC FP7 Collaborative projects</gtr:name><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/46B7F263-7987-4E65-B4E1-881AFC0F8B80"><gtr:id>46B7F263-7987-4E65-B4E1-881AFC0F8B80</gtr:id><gtr:firstName>Alan</gtr:firstName><gtr:surname>Mycroft</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/65CE4E92-E949-412F-BA1A-0D3F8F795A97"><gtr:id>65CE4E92-E949-412F-BA1A-0D3F8F795A97</gtr:id><gtr:firstName>Timothy</gtr:firstName><gtr:otherNames>Martin</gtr:otherNames><gtr:surname>Jones</gtr:surname><gtr:orcidId>0000-0002-4114-7661</gtr:orcidId><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FJ016284%2F1"><gtr:id>E879F6EE-A663-4191-9847-9DFCC8F6D601</gtr:id><gtr:title>DOME: Delaying and Overcoming Microprocessor Errors</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/J016284/1</gtr:grantReference><gtr:abstractText>Modern day computer systems have benefited from being designed and manufactured using an ever-increasing budget of transistors with very reliable integrated circuits. However, moving forward such a ''free lunch'' is over and forgotten nightmares faced by computer pioneers are coming back to haunt us. Not so long ago, unreliable valves were the basic building blocks for computers and research focussed on how to successfully compute, overcoming this underlying weakness (e.g. von Neuman, 1956, ''Probabilistic logics and the synthesis of reliable organisms from unreliable components'').

State-of-the-art integrated circuit technologies have now reached the range of 40-22 nanometers, posing significant reliability challenges. Hard or permanent errors can manifest themselves at any point during a processor's lifetime. During manufacturing, errors can render a proportion of a chip incapable of computing, thus decreasing yield and profit.
As we move towards smaller and smaller components, transistors take less and less time to wearout, becoming more prone to failure in the field. Traditional reliability solutions involve applying high-cost redundancy to the hardware structures within the processor, providing backup spares for when errors occur. On the application side, solutions also involve redundancy by running multiple copies of each piece of software.

A common criticism of current reliability solutions is that they do not consider how the software and hardware can be co-designed synergistically to tackle this challenge. Redesigning and reimplementing general purpose software applications will incur an unaffordable price tag. Our hypothesis is that virtualization technologies (a layer that transparently hides the underlying platform from the application software) have an important role to play. In particular, managed runtime environments (MREs) have become pervasive for high-productivity software developers and represent a promising vehicle for providing reliability mechanisms. Within these systems, applications can be monitored and morphed without user intervention.

There are two complementary strands to our proposed research, focused around a co-designed MRE and multicore computer architecture. Firstly, we will consider wearout mitigation schemes to slow processor ageing and lengthen a chip's lifetime before a hard fault occurs. Secondly, given that an error will occur at some point during a system's life, we will develop error-tolerance approaches that maintain execution on faulty hardware.

If successful, we believe this project will be seen as a significant milestone in the development of wearout-conscious and error-tolerant multicore architectures over the next decade. This research programme will advance our understanding of the field, tackling the UK Microelectronics Grand Challenge of Moore for Less that has been signposted by EPSRC. It is also important to highlight that this proposal tackles a key aspect of the new EPSRC ICT capability priority on &amp;quot;Many-core architectures and concurrency in distributed and embedded systems&amp;quot;.</gtr:abstractText><gtr:fund><gtr:end>2016-09-30</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2012-09-03</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>713649</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>Network for Sustainable Ultrascale Computing (NESUS)</gtr:collaboratingOrganisation><gtr:country>Global</gtr:country><gtr:description>NESUS</gtr:description><gtr:id>64286BEF-BFE8-4BEF-ABA6-294E4AD01D36</gtr:id><gtr:impact>The collaboration crosses disciplines within Computer Science. These are programming languages, compilers, runtimes, computer architecture and networks.</gtr:impact><gtr:partnerContribution>The whole consortium aims to meet the challenges of sustainable ultrascale computing.</gtr:partnerContribution><gtr:piContribution>Visit to initial kick-off meeting to discuss our work.</gtr:piContribution><gtr:sector>Public</gtr:sector><gtr:start>2014-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>EC FP7 Collaborative projects</gtr:collaboratingOrganisation><gtr:country>Belgium, Kingdom of</gtr:country><gtr:department>European Network of Excellence on High Performance and Embedded Architecture and Compilation (HiPEAC)</gtr:department><gtr:description>HiPEAC</gtr:description><gtr:id>364F18A3-332E-4937-8A40-CBDDB10E19A1</gtr:id><gtr:impact>The network is on High-Performance and Embedded Architectures and Compilers</gtr:impact><gtr:partnerContribution>A visit by a PostDoc from another member for 4 months.</gtr:partnerContribution><gtr:piContribution>Attending meetings to disseminate results and interact with other researchers in the same area.</gtr:piContribution><gtr:sector>Charity/Non Profit</gtr:sector><gtr:start>2011-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>We have been involved in discussions with ARM Ltd who are keen to see whether results can be deployed in their R-class processors. These are for real-time systems and require strong reliability guarantees. The process of getting these into actual products is lengthly.</gtr:description><gtr:firstYearOfImpact>2016</gtr:firstYearOfImpact><gtr:id>7EFCB5F4-6B2E-41B0-BDFA-C4BBABCD969A</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:sector>Digital/Communication/Information Technologies (including Software),Electronics</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We have three main findings at this stage in the grant (approximately 4 months after completion). First, many permanent errors within processors can be overcome through the addition of a small logic unit capable of re-executing instructions. Second, applications cause different amounts of transistor ageing depending on the operations they perform. Second, errors in a large core can be both detected and corrected using an array of small, power-efficient cores that run in parallel.</gtr:description><gtr:exploitationPathways>Our work can be used by industry to develop schemes that combat processor ageing and overcome permanent processor faults.</gtr:exploitationPathways><gtr:id>F3568A18-6231-492B-BB4F-9B127A7A88DD</gtr:id><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software),Electronics</gtr:sector></gtr:sectors><gtr:url>http://www.cl.cam.ac.uk/research/comparch/research/dome.html</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>Lynx is a very fast single-producer, single-consumer software queue.</gtr:description><gtr:id>A66DAEC0-4AFF-457C-B2E4-305A91E1F804</gtr:id><gtr:impact>We have used this queue to develop faster soft-error detection techniques. It has been downloaded 21 times by others.</gtr:impact><gtr:openSourceLicense>true</gtr:openSourceLicense><gtr:title>The Lynx Queue</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.cl.cam.ac.uk/~tmj32/data/</gtr:url><gtr:yearFirstProvided>2016</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/2FF1E5F8-8C57-48AA-B942-3045C5395643"><gtr:id>2FF1E5F8-8C57-48AA-B942-3045C5395643</gtr:id><gtr:title>Enhancing the L1 Data Cache Design to Mitigate HCI</gtr:title><gtr:parentPublicationTitle>IEEE Computer Architecture Letters</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/6339b3af3eff3094b2b643164b507597"><gtr:id>6339b3af3eff3094b2b643164b507597</gtr:id><gtr:otherNames>Valero A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/821DC5F7-E1A8-4520-930F-B89E05F14939"><gtr:id>821DC5F7-E1A8-4520-930F-B89E05F14939</gtr:id><gtr:title>Lynx</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/0525ced91b0e5cceafb0c0fdb87979a7"><gtr:id>0525ced91b0e5cceafb0c0fdb87979a7</gtr:id><gtr:otherNames>Mitropoulou K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>9781450343619</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/79038C8D-A565-48FD-9734-31F22926DFC3"><gtr:id>79038C8D-A565-48FD-9734-31F22926DFC3</gtr:id><gtr:title>Measuring Code Optimization Impact on Voltage Noise</gtr:title><gtr:parentPublicationTitle>Workshop on Silicon Errors in Logic - System Effects (SELSE)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/924ad6a7a994cc2a4bc14d5076a8cb8d"><gtr:id>924ad6a7a994cc2a4bc14d5076a8cb8d</gtr:id><gtr:otherNames>Kanev S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/33AE353B-9DD1-4C64-A84A-B1D62B95AEED"><gtr:id>33AE353B-9DD1-4C64-A84A-B1D62B95AEED</gtr:id><gtr:title>REPAIR: Hard-error recovery via re-execution</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/a18e109e12ed4c5b663ffb2005aa60ff"><gtr:id>a18e109e12ed4c5b663ffb2005aa60ff</gtr:id><gtr:otherNames>Soman J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/J016284/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>D7BA1404-E001-4782-929E-E96E28B01201</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Computer Sys. &amp; Architecture</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>