<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:department>Computer Science</gtr:department><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9"><gtr:id>3EAE04CA-9D62-4483-B9C4-F91AD9F4C5A9</gtr:id><gtr:name>University of Oxford</gtr:name><gtr:address><gtr:line1>University Chest</gtr:line1><gtr:line2>Wellington Square</gtr:line2><gtr:line4>Oxford</gtr:line4><gtr:postCode>OX1 2JD</gtr:postCode><gtr:region>South East</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/850FE923-1BDF-40F4-BA8A-54E6B32E43B8"><gtr:id>850FE923-1BDF-40F4-BA8A-54E6B32E43B8</gtr:id><gtr:firstName>Daniel</gtr:firstName><gtr:surname>Kroening</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FG026254%2F1"><gtr:id>B74F386D-7679-4F5E-BBB1-DBD71976888D</gtr:id><gtr:title>Efficient Verification of Software with Replicated Components</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/G026254/1</gtr:grantReference><gtr:abstractText>Concurrency is a model of computation that allows many units of executionto coexist. It is ubiquitous in computer science today: user processes in atime-sharing operating system execute concurrently, as do worker threads ina client-server environment. Parallel processing, once primarily ofinterest in high-performance computing, has emerged in recent years as anew way of increasing processing power, such as in multi-core concurrentsystems, even for the home personal computer.Concurrency poses new challenges for the quality assurance of software, fortwo reasons. First, concurrent programs have the potential for forms oferrors unknown in sequential computation, such as race conditions andmutual exclusion violations. Second, traditional reliability measures suchas simulation and testing fail in the presence of concurrency, due to thedifficulties of reproducing erroneous behavior. Model Checking is anautomated technique to reliably establish the correctness of software, orto reveal the existence of errors in a reproducible manner. A program isrepresented by a finite-state model, which is exhaustively searched forviolations of pre-specified properties.Exhaustive search, however, generally incurs a cost proportional to thenumber of model states that are reached during the search. This number isin turn worst-case exponential in the number of concurrent components. Thisstate space explosion problem has been a major obstacle to the widespreaduse of model checking.One avenue of our research is guided by the observation that concurrentsystems often consist of replicated components: instances of a singletemplate, generically describing the behavior of each component. Concurrentsystems of replicated components often exhibit a veryregular---symmetric---structure: their behavior is invariant underinterchanges of the components. This causes redundancy in the system modeland in the (naive) exploration of the model's state space.We propose to investigate the efficacy of symmetry reduction andparameterized verification to attack the state space explosion problem forsoftware with replicated components. Both techniques have shown to betremendously effective in principle, namely due to their potential ofreducing the size of a symmetric system by an exponential factor, or ofcollapsing the verification problem for an infinite family of systems toone for a single system or a small finite family, respectively.The applicability of these techniques to concurrent software was hampered,however, by the apparent incapability of model checking to deal withinteger variables over very large domains or even unbounded, dynamic datastructures. The situation changed dramatically with the advent of automatedabstraction-refinement techniques. Software is initially representedabstractly using coarse finite-state models, risking the possibility ofincorrect---spurious---verification results. The new paradigm came withways of detecting spuriousness, and of dealing with it by iterativelyrefining the abstract model until spurious behavior is removed.To sum up, concurrent software exhibits two sources of complexity: largevariable data domains and concurrency. Fortunately, these sources areorthogonal and can be attacked separately. This separation makes itpossible to apply symmetry reduction and parameterized techniques toconcurrent software, methods that target the concurrency aspect of statespace explosion. The ultimate goal of the proposed work is to combine thesemethods with iterative abstraction refinement to obtain verification toolsfor concurrent software that can seriously curb state space explosion atall levels.</gtr:abstractText><gtr:fund><gtr:end>2012-10-30</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2009-02-02</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>425899</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs><gtr:furtherFundingOutput><gtr:amountPounds>1098069</gtr:amountPounds><gtr:country>European Union (EU)</gtr:country><gtr:currCode>GBP</gtr:currCode><gtr:currCountryCode>United Kingdom</gtr:currCountryCode><gtr:currLang>en_GB</gtr:currLang><gtr:description>European Research Council</gtr:description><gtr:end>2016-11-02</gtr:end><gtr:fundingOrg>European Research Council (ERC)</gtr:fundingOrg><gtr:fundingRef>CPROVER</gtr:fundingRef><gtr:id>C275B61B-065B-4001-ABA4-C61C38CD8972</gtr:id><gtr:sector>Public</gtr:sector><gtr:start>2011-10-01</gtr:start></gtr:furtherFundingOutput></gtr:furtherFundingOutputs><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>There exists an extensive range of applications for CBMC, the software tool developed by this grant, for full details see http://www.cprover.org/cbmc/applications.shtml. 

CBMC has been used in the automotive industry for checking functionality of software, for verification of C code in pacemakers, for analysing driver interactions with semi-autonomous vehicles, and for runtime verification in ultra-critical systems used in aircraft.</gtr:description><gtr:firstYearOfImpact>2011</gtr:firstYearOfImpact><gtr:id>357AD857-4058-452F-9908-554414DD3FA3</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:sector>Digital/Communication/Information Technologies (including Software),Electronics,Energy,Healthcare,Manufacturing, including Industrial Biotechology,Security and Diplomacy,Transport</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/CEF24870-8914-40F7-A418-452C488C5C94"><gtr:id>CEF24870-8914-40F7-A418-452C488C5C94</gtr:id><gtr:title>Race analysis for systemc using model checking</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Design Automation of Electronic Systems</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/0c07e28e9897acd1864856e90ddde7a7"><gtr:id>0c07e28e9897acd1864856e90ddde7a7</gtr:id><gtr:otherNames>Blanc N</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/88A3F9EA-DD8D-4E10-B45E-08E4AEA6C9E7"><gtr:id>88A3F9EA-DD8D-4E10-B45E-08E4AEA6C9E7</gtr:id><gtr:title>Computing Mutation Coverage in Interpolation-Based Model Checking</gtr:title><gtr:parentPublicationTitle>IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/05e1de65aff48fe7c19733d40d73ddce"><gtr:id>05e1de65aff48fe7c19733d40d73ddce</gtr:id><gtr:otherNames>Chockler H</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/EAE707C6-1511-4140-9379-6185176A1BF6"><gtr:id>EAE707C6-1511-4140-9379-6185176A1BF6</gtr:id><gtr:title>Programming Languages and Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/b97a9c671c4eff48626278b6d7458a9b"><gtr:id>b97a9c671c4eff48626278b6d7458a9b</gtr:id><gtr:otherNames>Brain M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-642-54832-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/798B331A-8813-4E8D-90EB-0F71ECC17EDF"><gtr:id>798B331A-8813-4E8D-90EB-0F71ECC17EDF</gtr:id><gtr:title>Abstract satisfaction</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/f7fe72fe095e99648f6810e83806a6d9"><gtr:id>f7fe72fe095e99648f6810e83806a6d9</gtr:id><gtr:otherNames>D'Silva V</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>9781450325448</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/929FA50B-4B2F-45EB-9BB3-A9729DC893D5"><gtr:id>929FA50B-4B2F-45EB-9BB3-A9729DC893D5</gtr:id><gtr:title>Static Analysis</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/f7fe72fe095e99648f6810e83806a6d9"><gtr:id>f7fe72fe095e99648f6810e83806a6d9</gtr:id><gtr:otherNames>D'Silva V</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-33124-4</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/3CB43E4F-3999-4EED-A1CB-4975D31FE839"><gtr:id>3CB43E4F-3999-4EED-A1CB-4975D31FE839</gtr:id><gtr:title>Programming Languages and Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/23139a2b9b10b8a278f04f030c9fd7dc"><gtr:id>23139a2b9b10b8a278f04f030c9fd7dc</gtr:id><gtr:otherNames>Seghir M</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-37035-9</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/CAEB4462-56D7-4D27-93C4-3CCE5FF8B40C"><gtr:id>CAEB4462-56D7-4D27-93C4-3CCE5FF8B40C</gtr:id><gtr:title>Replication and Abstraction: Symmetry in Automated Formal Verification</gtr:title><gtr:parentPublicationTitle>Symmetry</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/ecb5f81843a97db79133b4b3edd90f35"><gtr:id>ecb5f81843a97db79133b4b3edd90f35</gtr:id><gtr:otherNames>Wahl T</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C10D4DA3-3F98-44F8-B0C6-969A8FD8E642"><gtr:id>C10D4DA3-3F98-44F8-B0C6-969A8FD8E642</gtr:id><gtr:title>A lazy approach to symmetry reduction</gtr:title><gtr:parentPublicationTitle>Formal Aspects of Computing</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/ecb5f81843a97db79133b4b3edd90f35"><gtr:id>ecb5f81843a97db79133b4b3edd90f35</gtr:id><gtr:otherNames>Wahl T</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2009-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/D985A00C-9F97-4022-B1CE-0BEF2EF22B9F"><gtr:id>D985A00C-9F97-4022-B1CE-0BEF2EF22B9F</gtr:id><gtr:title>Automatic analysis of DMA races using model checking and k-induction</gtr:title><gtr:parentPublicationTitle>Formal Methods in System Design</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/4d31bd5c118828012549edcb29f8a90c"><gtr:id>4d31bd5c118828012549edcb29f8a90c</gtr:id><gtr:otherNames>Donaldson A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/A30BFA7F-D292-4BAC-9059-A8D5FD9C7FBD"><gtr:id>A30BFA7F-D292-4BAC-9059-A8D5FD9C7FBD</gtr:id><gtr:title>Synchronising C/C++ and POWER</gtr:title><gtr:parentPublicationTitle>ACM SIGPLAN Notices</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/caf3d032b5e39560b0be5e4330259686"><gtr:id>caf3d032b5e39560b0be5e4330259686</gtr:id><gtr:otherNames>Sarkar S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/34FE010D-D6C2-469D-B165-C89DE8E48E75"><gtr:id>34FE010D-D6C2-469D-B165-C89DE8E48E75</gtr:id><gtr:title>Counterexample-guided abstraction refinement for symmetric concurrent programs</gtr:title><gtr:parentPublicationTitle>Formal Methods in System Design</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/4d31bd5c118828012549edcb29f8a90c"><gtr:id>4d31bd5c118828012549edcb29f8a90c</gtr:id><gtr:otherNames>Donaldson A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/F550DAFD-6260-4040-B33F-328A5BB26138"><gtr:id>F550DAFD-6260-4040-B33F-328A5BB26138</gtr:id><gtr:title>An Interpolating Sequent Calculus for Quantifier-Free Presburger Arithmetic</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/6599bec77cdbfb5f6381e36edbe87d72"><gtr:id>6599bec77cdbfb5f6381e36edbe87d72</gtr:id><gtr:otherNames>Brillout A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2011-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/E96C96C3-AA2B-453A-AC15-15A375C2CDE4"><gtr:id>E96C96C3-AA2B-453A-AC15-15A375C2CDE4</gtr:id><gtr:title>CONCUR 2012 - Concurrency Theory</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/79ad0f8a91ba239b8739a7345a9fb48e"><gtr:id>79ad0f8a91ba239b8739a7345a9fb48e</gtr:id><gtr:otherNames>Kaiser A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-32939-5</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/71A8627B-A4F9-4432-B66A-5502A928B347"><gtr:id>71A8627B-A4F9-4432-B66A-5502A928B347</gtr:id><gtr:title>Loop summarization using state and transition invariants</gtr:title><gtr:parentPublicationTitle>Formal Methods in System Design</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/0cdf277c528469f02313c7f73bc6399d"><gtr:id>0cdf277c528469f02313c7f73bc6399d</gtr:id><gtr:otherNames>Kroening D</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/9D0135D4-661F-44CF-B5D3-D655C8EF01E7"><gtr:id>9D0135D4-661F-44CF-B5D3-D655C8EF01E7</gtr:id><gtr:title>Context-aware counter abstraction</gtr:title><gtr:parentPublicationTitle>Formal Methods in System Design</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/2c5a53be25e645be6ce4cfca025e9295"><gtr:id>2c5a53be25e645be6ce4cfca025e9295</gtr:id><gtr:otherNames>Basler G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2010-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/0B1115B3-E3F6-4554-B72E-1BD2284D3A21"><gtr:id>0B1115B3-E3F6-4554-B72E-1BD2284D3A21</gtr:id><gtr:title>Tools and Algorithms for the Construction and Analysis of Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/f7fe72fe095e99648f6810e83806a6d9"><gtr:id>f7fe72fe095e99648f6810e83806a6d9</gtr:id><gtr:otherNames>D'Silva V</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-28755-8</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/FFFC5A07-B9DB-4A94-9273-11F9EEF8564C"><gtr:id>FFFC5A07-B9DB-4A94-9273-11F9EEF8564C</gtr:id><gtr:title>Ranking function synthesis for bit-vector relations</gtr:title><gtr:parentPublicationTitle>Formal Methods in System Design</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/8702ad21227e42e5aa9cbfe77c0e06a4"><gtr:id>8702ad21227e42e5aa9cbfe77c0e06a4</gtr:id><gtr:otherNames>Cook B</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/021E91E5-8D64-460E-829C-0BE2C7CBA813"><gtr:id>021E91E5-8D64-460E-829C-0BE2C7CBA813</gtr:id><gtr:title>A Widening Approach to Multithreaded Program Verification</gtr:title><gtr:parentPublicationTitle>ACM Transactions on Programming Languages and Systems</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/79ad0f8a91ba239b8739a7345a9fb48e"><gtr:id>79ad0f8a91ba239b8739a7345a9fb48e</gtr:id><gtr:otherNames>Kaiser A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/G026254/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>30</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>70</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>