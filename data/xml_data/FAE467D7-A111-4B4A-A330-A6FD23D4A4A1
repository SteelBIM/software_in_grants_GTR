<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations><gtr:collaborator url="http://gtr.rcuk.ac.uk:80/organisation/AFE5C6FD-3500-44F6-B100-184B5F2FD0D7"><gtr:id>AFE5C6FD-3500-44F6-B100-184B5F2FD0D7</gtr:id><gtr:name>Microsoft Research</gtr:name><gtr:address><gtr:line1>One Microsoft Way</gtr:line1><gtr:line4>Redmond</gtr:line4><gtr:line5>Washington 98052</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address></gtr:collaborator><gtr:collaborator url="http://gtr.rcuk.ac.uk:80/organisation/956E999D-84FF-4CBE-8DDF-49169EA9E142"><gtr:id>956E999D-84FF-4CBE-8DDF-49169EA9E142</gtr:id><gtr:name>Carnegie Mellon University</gtr:name><gtr:address><gtr:line1>5000 Forbes Avenue</gtr:line1><gtr:line4>Pittsburgh</gtr:line4><gtr:line5>PA 15213</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address></gtr:collaborator></gtr:collaborations><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:department>Sch of Informatics</gtr:department><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/AFE5C6FD-3500-44F6-B100-184B5F2FD0D7"><gtr:id>AFE5C6FD-3500-44F6-B100-184B5F2FD0D7</gtr:id><gtr:name>Microsoft Research</gtr:name><gtr:address><gtr:line1>One Microsoft Way</gtr:line1><gtr:line4>Redmond</gtr:line4><gtr:line5>Washington 98052</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/956E999D-84FF-4CBE-8DDF-49169EA9E142"><gtr:id>956E999D-84FF-4CBE-8DDF-49169EA9E142</gtr:id><gtr:name>Carnegie Mellon University</gtr:name><gtr:address><gtr:line1>5000 Forbes Avenue</gtr:line1><gtr:line4>Pittsburgh</gtr:line4><gtr:line5>PA 15213</gtr:line5><gtr:region>Outside UK</gtr:region><gtr:country>United States</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>COLLABORATOR</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/CC2CA7BA-3638-4B6B-92BB-5C4336296414"><gtr:id>CC2CA7BA-3638-4B6B-92BB-5C4336296414</gtr:id><gtr:firstName>Paul</gtr:firstName><gtr:otherNames>Bernard</gtr:otherNames><gtr:surname>Jackson</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FI010335%2F1"><gtr:id>FAE467D7-A111-4B4A-A330-A6FD23D4A4A1</gtr:id><gtr:title>Automatic Proof Procedures for Polynomials and Special Functions</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/I010335/1</gtr:grantReference><gtr:abstractText>An engineering design is expected to satisfy safety constraints, many of which can be expressed as mathematical and logical formulas. Computer software exists that can check some such formulas automatically, but although they can have a large and complicated logical structure, the mathematical component currently has to be linear: in other words, involving nothing more complicated than addition. Real-world engineering problems involve sophisticated mathematical concepts, such as polynomials and transcendental functions.The investigators have developed software (called MetiTarski and RAHD) that can solve such problems in many cases. The current project will extend the scope of this software, increasing its power and targeting it at specific real-world application areas. One such application is analogue circuitry, which is widespread in consumer electronics. The project will investigate many other potential applications In engineering and the mathematical sciences.</gtr:abstractText><gtr:fund><gtr:end>2015-02-28</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2010-11-01</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>518443</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs><gtr:collaborationOutput><gtr:collaboratingOrganisation>Carnegie Mellon University</gtr:collaboratingOrganisation><gtr:country>United States of America</gtr:country><gtr:department>School of Computer Science (SCS)</gtr:department><gtr:description>CMU - KeYmaera group</gtr:description><gtr:id>1CDB0869-307C-4616-8EDC-014C4FE92BAC</gtr:id><gtr:impact>This collaboration resulted in enhancements to the KeYmaera tool and Sphinx engineering environment that are developed and distributed by CMU. It also resulted in the published papers with following DOIs:
10.1007/978-3-662-46081-8_24
10.1007/978-3-319-10936-7_10
10.1016/j.cl.2015.11.003
10.1007/978-3-319-19249-9_32
10.1007/978-3-319-06200-6_14
10.1007/s11786-014-0176-y</gtr:impact><gtr:partnerContribution>CMU hosted visits, provided expertise on KeYmaera, and collaborated on joint publications.</gtr:partnerContribution><gtr:piContribution>We have integrated our software tools (RAHD and MetiTarski) into the KeYmaera hybrid-systems theorem prover and the Sphinx verification-driven engineering environment which incorporates KeYmaera, both developed at CMU. We experimented with how to engineer the integration with our tools and other similar tools in order to significantly increase the scale of verification problems we could deploy these tools on. We also enhanced the reasoning principles used in KeYmaera, exploring better rules for invariant reasoning, for reasoning about liveness, and the automatic synthesis of invariants.</gtr:piContribution><gtr:sector>Academic/University</gtr:sector><gtr:start>2012-01-01</gtr:start></gtr:collaborationOutput><gtr:collaborationOutput><gtr:collaboratingOrganisation>Microsoft Research</gtr:collaboratingOrganisation><gtr:country>United Kingdom of Great Britain &amp; Northern Ireland (UK)</gtr:country><gtr:department>Research in Software Engineering (RiSE)</gtr:department><gtr:description>MSR - Z3 group</gtr:description><gtr:id>D53A5E59-65CB-429C-B7B6-622259980B5F</gtr:id><gtr:impact>One set of outcomes is various enhancements to Microsoft's Z3 software tool. 
Publications describing these are listed elsewhere and have the following DOIs:
10.1007/978-3-642-31374-5_24
10.1007/978-3-642-36675-8_2
10.1007/978-3-642-38574-2_12</gtr:impact><gtr:partnerContribution>Microsoft Research provided the time of one of the principal developers of Z3, and implemented our ideas and jointly developed ideas in the Z3 tool.</gtr:partnerContribution><gtr:piContribution>We developed ideas for enhancing the non-linear arithmetic reasoning of Microsoft Research's Z3 SMT solver software tool, of which some were specifically tailored to improve the performance of our MetiTarski software tool. (MetiTarski makes use of Z3.) We also inspired the top-level coordination of Z3's heuristics and provided the Z3 developers with a set of non-linear arithmetic challenge problems.</gtr:piContribution><gtr:sector>Private</gtr:sector><gtr:start>2012-01-01</gtr:start></gtr:collaborationOutput></gtr:collaborationOutputs><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>At the current time, probably the most significant impact outside of academia has been been the influence on the support for non-linear arithmetic reasoning in the Z3 theorem prover software tool from Microsoft Research. This Z3 tool is used as an automatic reasoning engine in a variety of applications, many related to the formal verification of software. For example, in the UK, the company Altran UK (one of our industrial collaborators) now uses Z3 in their formal verification toolkit for software written in the SPARK subset of the Ada language. Projects this toolkit is deployed on include software for UK air traffic control which is co-developed by Altran UK. This toolkit helps to ensure that this software is free of runtime exception bugs.</gtr:description><gtr:firstYearOfImpact>2015</gtr:firstYearOfImpact><gtr:id>DFB0732E-775A-4124-8CEE-134C73D76713</gtr:id><gtr:impactTypes><gtr:impactType>Economic</gtr:impactType></gtr:impactTypes><gtr:sector>Aerospace, Defence and Marine</gtr:sector></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We made major advances in the power of our theorem prover tool MetiTarski for reasoning about problems involving transcendental functions. These advances included optimising the approach to backtracking, exploiting machine learning to select and configure underlying decision procedures, and employing counter-example models from decision procedures to speed search. We also took forward ideas in our RAHD tool for non-linear real arithmetic reasoning in exciting directions. This was primarily in collaboration with one of the principal developers of the Z3 SMT solver, a world leading automatic theorem prover from Microsoft Research with widespread uses in formal verification applications and beyond. For example, the heuristic approach to combining reasoning techniques in RAHD inspired a similar new top-level architecture for Z3. We also created a Z3 library that could handle non-linear polynomial arithmetic with reals, extended with infinitessimal numbers, and used this to handle reasoning problems with more complicated, alternating quantifier structure.

For our verification tools to be used effectively in formal verification applications, integration of them into other verification tools was seen as essential. To this end, we integrated MetiTarski and RAHD into the KeYmaera semi-automated theorem proving environment from Carnegie Mellon University. KeYmaera is tailored for reasoning about hybrid systems, common mathematical models of cyber-physical systems (e.g. the control systems for aircraft), and successful use of it relies heavily on the strength of underlying theorem provers for non-linear real arithmetic. Our tools have also been integrated into the PVS theorem prover and MetiTarski has been used in the Why3 software verification platform.

When identifying KeYmaera applications that could make good use of MetiTarski, we realised there were a number of ways in which the core inference rules used in KeYmaera could be much improved, and we put significant effort into this, partly in collaboration with the KeyMaera developers. For example, we explored how to efficiently automatically discover invariants with rich structure. The discovery of invariants is essential for most of the verification tasks KeYmaera is use for. We also significantly generalised the rules used for establishing invariants and for showing liveness properties.

Through the course of our work, we have accumulated large collections of challenge problems involving non-linear polynomial arithmetic, arithmetic with transcendental functions, and invariants of non-linear dynamical systems, and we have made these collections publically available. Already the Z3 developers have used our challenge problems to test and refine Z3's core procedures for non-linear polynomial arithmetic reasoning.</gtr:description><gtr:exploitationPathways>Researchers both in academia and industry can take our work forward by reading our papers and experimenting with our publicly released tools and challenge problems. The primary way in which our results could be put to use is through our tools being integrated into formal verification tools and environments that then can be employed by those needing the strong assurances of correctness that formal verification can provide. To date one of the most significant integrations is of MetiTarski into the KeYmaera hybrid theorem prover and the related Sphinx verification-driven engineering toolset. Also our research has had influence on the development of the Z3 SMT solver tool which is used as a reasoning engine in a wide variety of formal verification applications.</gtr:exploitationPathways><gtr:id>1872D0B2-9024-40B5-AD42-DF29B72B4191</gtr:id><gtr:sectors><gtr:sector>Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software),Electronics,Financial Services, and Management Consultancy,Manufacturing, including Industrial Biotechology,Pharmaceuticals and Medical Biotechnology,Transport,Other</gtr:sector></gtr:sectors></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs><gtr:softwareAndTechnicalProductOutput><gtr:description>MetiTarski is an automatic theorem prover tailored for proving problems involving non-linear real arithmetic with polynomial and transcendental expressions.

Funding from this grant enabled major enhancements to MetiTarski's performance which allow it now to handle much larger problems.</gtr:description><gtr:id>8EC838C3-F4DE-4E66-8D3D-D6A1DA3CECF9</gtr:id><gtr:impact>The main impact we envisage for MetiTarski is in the formal verification of software and other engineering systems. To this end we have integrated MetiTarski into other formal verification tools such as the KeYmaera and PVS theorem provers and the Why3 software verification toolkit. At the current time the case studies that have been undertaken which involve use of these tools in conjunction with MetiTarski are all of a preliminary experimental nature.</gtr:impact><gtr:openSourceLicense>true</gtr:openSourceLicense><gtr:title>MetiTarski</gtr:title><gtr:type>Software</gtr:type><gtr:url>http://www.cl.cam.ac.uk/~lp15/papers/Arith/index.html</gtr:url><gtr:yearFirstProvided>2011</gtr:yearFirstProvided></gtr:softwareAndTechnicalProductOutput></gtr:softwareAndTechnicalProductOutputs><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/2B168C52-19C4-4F49-B813-5CF47AFF39FC"><gtr:id>2B168C52-19C4-4F49-B813-5CF47AFF39FC</gtr:id><gtr:title>FM 2015: Formal Methods</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/6571b0447cb5bcb7f536f15cbf4303e9"><gtr:id>6571b0447cb5bcb7f536f15cbf4303e9</gtr:id><gtr:otherNames>Sogokon A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:isbn>978-3-319-19248-2</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/1C51E78D-7EF8-4DC8-A2A1-81E207C3A81D"><gtr:id>1C51E78D-7EF8-4DC8-A2A1-81E207C3A81D</gtr:id><gtr:title>Static Analysis</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/3f4c38c728c878d5c0475341899042ad"><gtr:id>3f4c38c728c878d5c0475341899042ad</gtr:id><gtr:otherNames>Ghorbal K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-319-10935-0</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/09286DC9-C8ED-4ECE-A4BA-195707DB5521"><gtr:id>09286DC9-C8ED-4ECE-A4BA-195707DB5521</gtr:id><gtr:title>Frontiers of Combining Systems</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e52bf261269fdc5c449dc9c2976ed735"><gtr:id>e52bf261269fdc5c449dc9c2976ed735</gtr:id><gtr:otherNames>Paulson L</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-40884-7</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/0C8FF773-DA84-48EF-9A10-F55D6C3B2BD0"><gtr:id>0C8FF773-DA84-48EF-9A10-F55D6C3B2BD0</gtr:id><gtr:title>A Vision of Collaborative Verification-Driven Engineering of Hybrid Systems</gtr:title><gtr:parentPublicationTitle>Proceedings of Enabling Domain Experts to use Formalised Reasoning - Symposium AISB, Do-Form</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e44d3328024f9537ad72d8e456925b40"><gtr:id>e44d3328024f9537ad72d8e456925b40</gtr:id><gtr:otherNames>Mitsch, s</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/436E469D-7DCD-4DE2-9F4F-0B0AB13B92B5"><gtr:id>436E469D-7DCD-4DE2-9F4F-0B0AB13B92B5</gtr:id><gtr:title>Automated Deduction - CADE-24</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e0a013b002f881772b27eef1784d29b1"><gtr:id>e0a013b002f881772b27eef1784d29b1</gtr:id><gtr:otherNames>de Moura L</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-38573-5</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/0C1751F2-8AF0-4312-A339-A54C7BB6662A"><gtr:id>0C1751F2-8AF0-4312-A339-A54C7BB6662A</gtr:id><gtr:title>A modular, efficient formalisation of real algebraic numbers</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/ce73e661495882f5061c864c6e2c1985"><gtr:id>ce73e661495882f5061c864c6e2c1985</gtr:id><gtr:otherNames>Li W</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>9781450341271</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/950D856D-52AA-485C-869E-B4BD4AC36B40"><gtr:id>950D856D-52AA-485C-869E-B4BD4AC36B40</gtr:id><gtr:title>Automated Reasoning and Mathematics</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e0a013b002f881772b27eef1784d29b1"><gtr:id>e0a013b002f881772b27eef1784d29b1</gtr:id><gtr:otherNames>de Moura L</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2013-01-01</gtr:date><gtr:isbn>978-3-642-36674-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/3597E08E-DDFC-44B8-9BD0-A67EDA7FC964"><gtr:id>3597E08E-DDFC-44B8-9BD0-A67EDA7FC964</gtr:id><gtr:title>The Higher-Order Prover Leo-II</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/2406069d98243949208c4a5df84966e3"><gtr:id>2406069d98243949208c4a5df84966e3</gtr:id><gtr:otherNames>Benzm?ller C</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/44BA6AF3-A64D-4BD3-BA19-AA79E1F09C2A"><gtr:id>44BA6AF3-A64D-4BD3-BA19-AA79E1F09C2A</gtr:id><gtr:title>Verification, Model Checking, and Abstract Interpretation</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/6571b0447cb5bcb7f536f15cbf4303e9"><gtr:id>6571b0447cb5bcb7f536f15cbf4303e9</gtr:id><gtr:otherNames>Sogokon A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date><gtr:isbn>978-3-662-49121-8</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/5D0CA5A1-80CF-4552-BF73-691BA2058397"><gtr:id>5D0CA5A1-80CF-4552-BF73-691BA2058397</gtr:id><gtr:title>Using Machine Learning to Decide When to Precondition Cylindrical Algebraic Decomposition with Groebner Bases</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/d679dbb922b3259a9121cc6089b55e91"><gtr:id>d679dbb922b3259a9121cc6089b55e91</gtr:id><gtr:otherNames>Huang Z</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/A7F1DB32-FE28-4105-8F5C-FBF7393217E8"><gtr:id>A7F1DB32-FE28-4105-8F5C-FBF7393217E8</gtr:id><gtr:title>Intelligent Computer Mathematics</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/d685191bb61ce7bb2e652b50dc634059"><gtr:id>d685191bb61ce7bb2e652b50dc634059</gtr:id><gtr:otherNames>Passmore G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-31373-8</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/B504BA11-0B1D-4E54-9BA2-F98B0BF05C0A"><gtr:id>B504BA11-0B1D-4E54-9BA2-F98B0BF05C0A</gtr:id><gtr:title>Case Splitting in an Automatic Theorem Prover for Real-Valued Special Functions</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/bb9ac1eda8114274d53b934b3b85343d"><gtr:id>bb9ac1eda8114274d53b934b3b85343d</gtr:id><gtr:otherNames>Bridge J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/12F6086F-78F8-4F2E-826D-2EE3AFD6F9A6"><gtr:id>12F6086F-78F8-4F2E-826D-2EE3AFD6F9A6</gtr:id><gtr:title>Machine Learning for First-Order Theorem Proving</gtr:title><gtr:parentPublicationTitle>Journal of Automated Reasoning</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/bb9ac1eda8114274d53b934b3b85343d"><gtr:id>bb9ac1eda8114274d53b934b3b85343d</gtr:id><gtr:otherNames>Bridge J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/4DDAC068-CAE5-4469-98C0-C93BCE65C867"><gtr:id>4DDAC068-CAE5-4469-98C0-C93BCE65C867</gtr:id><gtr:title>Verification, Model Checking, and Abstract Interpretation</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/3f4c38c728c878d5c0475341899042ad"><gtr:id>3f4c38c728c878d5c0475341899042ad</gtr:id><gtr:otherNames>Ghorbal K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:isbn>978-3-662-46080-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/1C02AC6A-64E3-4ACA-870A-5731BBF29ABF"><gtr:id>1C02AC6A-64E3-4ACA-870A-5731BBF29ABF</gtr:id><gtr:title>How the World Computes</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/d685191bb61ce7bb2e652b50dc634059"><gtr:id>d685191bb61ce7bb2e652b50dc634059</gtr:id><gtr:otherNames>Passmore G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-30869-7</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/09ED4087-711E-4173-9EF0-6757CF2FB344"><gtr:id>09ED4087-711E-4173-9EF0-6757CF2FB344</gtr:id><gtr:title>NASA Formal Methods</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/3018a89ad31c741f4ff3260e5f3a01cb"><gtr:id>3018a89ad31c741f4ff3260e5f3a01cb</gtr:id><gtr:otherNames>Jackson P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-319-06199-3</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/12743C13-3E24-459D-BAEB-C88D2134757E"><gtr:id>12743C13-3E24-459D-BAEB-C88D2134757E</gtr:id><gtr:title>Interactive Theorem Proving</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/e52bf261269fdc5c449dc9c2976ed735"><gtr:id>e52bf261269fdc5c449dc9c2976ed735</gtr:id><gtr:otherNames>Paulson L</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2012-01-01</gtr:date><gtr:isbn>978-3-642-32346-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C4FC685E-D790-4D36-A98F-D01A93CB6386"><gtr:id>C4FC685E-D790-4D36-A98F-D01A93CB6386</gtr:id><gtr:title>Collaborative Verification-Driven Engineering of Hybrid Systems</gtr:title><gtr:parentPublicationTitle>Mathematics in Computer Science</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/09c82538d2f40c6609311cc8f5ba59c5"><gtr:id>09c82538d2f40c6609311cc8f5ba59c5</gtr:id><gtr:otherNames>Mitsch S</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/340931FA-E918-411C-8AD8-9B776A9F83DB"><gtr:id>340931FA-E918-411C-8AD8-9B776A9F83DB</gtr:id><gtr:title>A hierarchy of proof rules for checking positive invariance of algebraic and semi-algebraic sets</gtr:title><gtr:parentPublicationTitle>Computer Languages, Systems &amp; Structures</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/3f4c38c728c878d5c0475341899042ad"><gtr:id>3f4c38c728c878d5c0475341899042ad</gtr:id><gtr:otherNames>Ghorbal K</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/I010335/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>76783275-A9F8-4B4E-B314-51363124259C</gtr:id><gtr:percentage>70</gtr:percentage><gtr:text>Fundamentals of Computing</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>10</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>1E31C833-3A35-4F54-A499-31D0C245B5D5</gtr:id><gtr:percentage>20</gtr:percentage><gtr:text>System on Chip</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>