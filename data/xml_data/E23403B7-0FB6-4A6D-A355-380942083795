<?xml version="1.0" encoding="UTF-8"?>
<gtr:projectOverview xmlns:gtr="http://gtr.rcuk.ac.uk/api"><gtr:projectComposition><gtr:collaborations/><gtr:leadResearchOrganisation url="http://gtr.rcuk.ac.uk:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:department>Sch of Informatics</gtr:department><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:typeInd>RO</gtr:typeInd></gtr:leadResearchOrganisation><gtr:organisationRoles><gtr:organisationRole url="http://gtr.rcuk.ac.uk:80/organisation/2DB7ED73-8E89-457A-A395-FAC12F929C1A"><gtr:id>2DB7ED73-8E89-457A-A395-FAC12F929C1A</gtr:id><gtr:name>University of Edinburgh</gtr:name><gtr:address><gtr:line1>Old College</gtr:line1><gtr:line2>South Bridge</gtr:line2><gtr:line3>Mayfield Road</gtr:line3><gtr:line4>Edinburgh</gtr:line4><gtr:postCode>EH8 9YL</gtr:postCode><gtr:region>Scotland</gtr:region><gtr:country>United Kingdom</gtr:country></gtr:address><gtr:roles><gtr:role><gtr:name>LEAD_RO</gtr:name></gtr:role></gtr:roles></gtr:organisationRole></gtr:organisationRoles><gtr:personRoles><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/34E83039-D140-442C-8883-F0C68C0D0BE1"><gtr:id>34E83039-D140-442C-8883-F0C68C0D0BE1</gtr:id><gtr:firstName>James</gtr:firstName><gtr:surname>McKinna</gtr:surname><gtr:roles><gtr:role><gtr:name>RESEARCHER_COI</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/8E1C8B7F-9A0A-4744-A596-D2F5F354E1D9"><gtr:id>8E1C8B7F-9A0A-4744-A596-D2F5F354E1D9</gtr:id><gtr:firstName>Perdita</gtr:firstName><gtr:surname>Stevens</gtr:surname><gtr:roles><gtr:role><gtr:name>PRINCIPAL_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole><gtr:personRole url="http://gtr.rcuk.ac.uk:80/person/1891B08F-D036-435E-8451-F61BB162965B"><gtr:id>1891B08F-D036-435E-8451-F61BB162965B</gtr:id><gtr:firstName>James</gtr:firstName><gtr:surname>Cheney</gtr:surname><gtr:roles><gtr:role><gtr:name>CO_INVESTIGATOR</gtr:name></gtr:role></gtr:roles></gtr:personRole></gtr:personRoles><gtr:project url="http://gtr.rcuk.ac.uk:80/projects?ref=EP%2FK020218%2F1"><gtr:id>E23403B7-0FB6-4A6D-A355-380942083795</gtr:id><gtr:title>A Theory of Least Change for Bidirectional Transformations</gtr:title><gtr:status>Closed</gtr:status><gtr:grantCategory>Research Grant</gtr:grantCategory><gtr:grantReference>EP/K020218/1</gtr:grantReference><gtr:abstractText>A bidirectional transformation is a means of maintaining consistency between multiple information sources: when one source is edited, the others may need updating to restore consistency. There are many domains in which bidirectional transformations are needed. Currently, the best-known of these is model-driven development. Model-driven development is the approach to developing software in which models - specialised descriptions of only certain aspects of the software to be built - are important artefacts in the development. Some or all code may be generated from models, rather than written by hand. Different experts work on different models, adapted to their needs, each recording their decisions in their own model. In order to end up with a correct system, the models need to be kept consistent; when one developer changes one model, another model may need to be changed to match, and vice versa. Another current application is the &amp;quot;view update&amp;quot; problem in databases (updating source tables after edits to view tables). Potential applications include integrating different electronic health records, maintaining consistency between a high-level systems biology model and a more detailed model of some aspect, providing user-friendly access to machine-oriented data representation, automating the coevolution of a program with its proof of correctness, etc.

A bidirectional transformation can be implemented in terms of several unidirectional restoring functions, one per source; but this duplicates information (for example, information about the structure of the models being related appears in every function), wasting effort and risking inconsistencies. Bidirectional transformation languages allow one to describe the consistency relationship and the restoring functions with a single declarative specification. A good bidirectional transformation language should support the developer of the transformation by not allowing the developer to write nonsense: when a transformation is considered correct according to the language, it should obey basic sanity properties.

Various natural properties of bidirectional transformations are now well understood; in particular, &amp;quot;correctness&amp;quot; (that the bidirectional transformation does actually restore consistency) and &amp;quot;hippocraticness&amp;quot; (that if an edited source remains consistent, then the bidirectional transformation makes no changes). What is much less well understood, and what we will study in this project, is the &amp;quot;principle of least change&amp;quot; (that a bidirectional transformation should not make unnecessary changes when it enforces consistency).

Our hypotheses are: (i) that this Principle of Least Change can be precisely and productively captured; (ii) that our understanding of the Principle will benefit from work on &amp;quot;provenance&amp;quot; in databases - provenance involves building and using a record of which outputs depend on which inputs, and how they do so; and (iii) that this will lead to a theory of &amp;quot;alignment&amp;quot; - matching of parts - for non-free datatypes such as associative lists and graphs. Graphs are an especially important datatype, because they are ubiquitous in software engineering. In particular, the models in model-driven development are often types of graph, such as class diagrams and statecharts.

This project will work on the mathematical foundations of bidirectional transformations. The reason for doing this is in order that a better understanding of the Principle of Least Change will, in future, contribute to more usable and more reliable model-driven engineering tools, supporting efficient and correct software development, even in the face of continuous change. It will thus enable software developers to combine the advantages of model-driven development with those of agile methods. By enabling better languages and tools to be developed, it will also make practical the use of bidirectional transformations in a wide range of other application areas.</gtr:abstractText><gtr:potentialImpactText>Outside academia, the most obvious direct beneficiaries will be software engineers and tool developers working within the model-driven development paradigm. They represent many application domains, including embedded systems, automotive and aeronautical engineering, health informatics, public-sector IT, and finance; see http://www.omg.org/mda/products_success.htm for a portfolio of MDD success stories.

Currently model-driven development is hard to reconcile with agile development, the other important trend in modern software engineering. This is because the lack of dependable bidirectional transformation tools makes it impractical to work with several models any of which may need to change; instead, users are forced to finalise one model before using it to generate another model or code which may itself need to be worked on. Our work will enable the development of better tools and languages for bidirectional transformations, which in turn will let changes be made in the most appropriate model and automatically rolled out to other models as necessary. Thus, in addition to benefitting developers already using the MDD paradigm, our research should benefit developers who currently do not use it because of the difficulty of making it sufficiently agile.

These groups will benefit from results leading to more useful and more robust tools for software development, and especially tools that reliably automate the tedious and error-prone tasks that follow as software requirements and design decisions evolve over time. The essence of these tasks is that they restore consistency between different system perspectives when changes are made from one perspective, and our research is about precisely this reconciliation process. 

Indirectly, all of society will benefit from more dependable software systems. All of us rely on a daily basis on software infrastructure - for banking, communications, travel, power, shopping, and many other necessities - and we all experience software failures that cause frustration and inconvenience at best, and financial loss and threats to safety at worst. Ultimately, better tools for software development will lead to better quality of life in the digital world.</gtr:potentialImpactText><gtr:fund><gtr:end>2016-12-01</gtr:end><gtr:funder url="http://gtr.rcuk.ac.uk:80/organisation/798CB33D-C79E-4578-83F2-72606407192C"><gtr:id>798CB33D-C79E-4578-83F2-72606407192C</gtr:id><gtr:name>EPSRC</gtr:name></gtr:funder><gtr:start>2013-03-15</gtr:start><gtr:type>INCOME_ACTUAL</gtr:type><gtr:valuePounds>395169</gtr:valuePounds></gtr:fund><gtr:output><gtr:artisticAndCreativeProductOutputs/><gtr:collaborationOutputs/><gtr:disseminationOutputs/><gtr:exploitationOutputs/><gtr:furtherFundingOutputs/><gtr:impactSummaryOutputs><gtr:impactSummaryOutput><gtr:description>This is primarily a theoretical, foundational project.

- We have established the Bx Example Repository, http://bx-community.wikidot.com/examples:home , which is a resource for the whole community interested in bidirectional transformations, including both theoreticians and practitioners. It records and discusses interesting examples of bidirectional transformations, some theoretical, some industrial in origin.

- We held a Summer School on Bidirectional Transformations in July 2016, which was attended by both academics and practitioners, including several engineers from Google. A book resulting from the summer school is in preparation.</gtr:description><gtr:firstYearOfImpact>2013</gtr:firstYearOfImpact><gtr:id>3F36973D-EFA1-4988-A2D1-ABE2D5735DD6</gtr:id><gtr:impactTypes/></gtr:impactSummaryOutput></gtr:impactSummaryOutputs><gtr:intellectualPropertyOutputs/><gtr:keyFindingsOutput><gtr:description>We have discovered that the technical device called monads can be useful to describe, formally, correctness properties for the type of software artefact we're studying (bidirectional transformations). These are particularly useful in that, we showed, they can be used to reason about situations in which the bidirectional transformation needs to have so-called effects, such as interacting with the user.

We have developed several notions of least surprise; that is, properties that can help such bidirectional transformations to have behaviour that will be useful and not disruptive to their users. We showed why the most obvious version of such a property does not always give the bidirectional transformation the best behaviour, and we investigated alternatives deriving from mathematical analysis.

We have developed the concept of subspace pairs, which help us to describe situations in which a bidirectional transformation may have very safe, predictable behaviour under some circumstances, so that the user could feel confident in using it without checking under those circumstances, while under other circumstances it may be necessary for the user to check whether the transformation's behaviour is what is wanted.

Unexpectedly, we found a close relationship between bidirectional transformations and a well-known relationship between concurrent processes, viz bisimulation. In a nutshell, bidirectional transformations are proof-relevant bisimulations; here proof-relevant means that it does not only matter that things are related, but precisely how they are related.

The connections we developed between bidirectional transformations and monads on the one hand, and bisimulations on the other, enabled us to understand better how bidirectional compositions can be composed: this is an important issue for using them in computing contexts, and something that had difficult up till now.

We found several areas that need more investigation than we could do on this grant: for example, we found that witness structures, which help to demonstrate whether data sources are consistent, can be described using dependent types; we now hypothesise that it will be important for a bidirectional transformation to explain its actions, and we think an approach via dependent types may help us to do this.</gtr:description><gtr:exploitationPathways>Our findings will help people who design bidirectional transformation languages (including, we hope, ourselves) to make choices that will make the languages easy to use to write bidirectional transformations that will do what users want without confusing or surprising them. Such languages may be embedded in a general purpose programming language such as Haskell, making use of our monad-based work, or may be free-standing languages. This is one ingredient in an ongoing agenda of helping model-driven development to be more generally applicable in an agile way, thereby making it feasible to develop high quality software faster and more cheaply.</gtr:exploitationPathways><gtr:id>6A689A67-B9E7-4801-8C69-430176FDBCD9</gtr:id><gtr:sectors><gtr:sector>Digital/Communication/Information Technologies (including Software)</gtr:sector></gtr:sectors><gtr:url>http://groups.inf.ed.ac.uk/bx/</gtr:url></gtr:keyFindingsOutput><gtr:otherResearchOutputs/><gtr:policyInfluenceOutputs/><gtr:productOutputs/><gtr:researchDatabaseAndModelOutputs/><gtr:researchMaterialOutputs/><gtr:softwareAndTechnicalProductOutputs/><gtr:spinOutOutputs/></gtr:output><gtr:publications><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/48259427-8602-4D54-9361-96D9FD2A2DE7"><gtr:id>48259427-8602-4D54-9361-96D9FD2A2DE7</gtr:id><gtr:title>Type-and-scope safe programs and their proofs</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/be9a02867f7a3ddec66365cdd6e17322"><gtr:id>be9a02867f7a3ddec66365cdd6e17322</gtr:id><gtr:otherNames>Allais G</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2017-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/B20AE0CD-4D4D-42B5-AB41-C4A0720D52CE"><gtr:id>B20AE0CD-4D4D-42B5-AB41-C4A0720D52CE</gtr:id><gtr:title>Towards a Principle of Least Surprise for Bidirectional Transformations</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/4f066d2e4f967110e9cf48f2af77608d"><gtr:id>4f066d2e4f967110e9cf48f2af77608d</gtr:id><gtr:otherNames>Cheney, J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/FCD353E3-33BA-4E41-93BD-E90186B0E3B0"><gtr:id>FCD353E3-33BA-4E41-93BD-E90186B0E3B0</gtr:id><gtr:title>Mathematics of Program Construction</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/7c5ef01f748229ef0d15be42f010625e"><gtr:id>7c5ef01f748229ef0d15be42f010625e</gtr:id><gtr:otherNames>Abou-Saleh F</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date><gtr:isbn>978-3-319-19796-8</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/BB13DE4F-7319-4406-B520-7419CC69B3FB"><gtr:id>BB13DE4F-7319-4406-B520-7419CC69B3FB</gtr:id><gtr:title>Coalgebraic Aspects of Bidirectional Computation</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/a5039a8e06bdd028e5d8744ae878d3f1"><gtr:id>a5039a8e06bdd028e5d8744ae878d3f1</gtr:id><gtr:otherNames>Abou-Saleh, F</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/AC360EE3-AFCE-403F-BB93-C04225D84505"><gtr:id>AC360EE3-AFCE-403F-BB93-C04225D84505</gtr:id><gtr:title>A Systematic Approach and Guidelines to Developing a Triple Graph Grammar</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/771b9b11786ec8afede3b5fedbcf6763"><gtr:id>771b9b11786ec8afede3b5fedbcf6763</gtr:id><gtr:otherNames>Anjorin, A</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/63440BBE-F5E6-40E2-BBA6-A50A13FE3680"><gtr:id>63440BBE-F5E6-40E2-BBA6-A50A13FE3680</gtr:id><gtr:title>Reflections on monadic lenses</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/a5039a8e06bdd028e5d8744ae878d3f1"><gtr:id>a5039a8e06bdd028e5d8744ae878d3f1</gtr:id><gtr:otherNames>Abou-Saleh, F</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/2585D076-D390-4758-937E-15A7D45AF7A1"><gtr:id>2585D076-D390-4758-937E-15A7D45AF7A1</gtr:id><gtr:title>The Encode-Decode Method, Relationally</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/a3cc6f58f736272ac585091eaabdf7aa"><gtr:id>a3cc6f58f736272ac585091eaabdf7aa</gtr:id><gtr:otherNames>McKinna, J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2015-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/B1E75C0A-07BD-4F1F-8C1B-852084290E17"><gtr:id>B1E75C0A-07BD-4F1F-8C1B-852084290E17</gtr:id><gtr:title>Towards a Repository of Bx Examples</gtr:title><gtr:parentPublicationTitle>2014 workshop on Bidirectional Transformations (BX 2014)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/4f066d2e4f967110e9cf48f2af77608d"><gtr:id>4f066d2e4f967110e9cf48f2af77608d</gtr:id><gtr:otherNames>Cheney, J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/C745BE5E-9752-4764-A581-4B5E1A461C53"><gtr:id>C745BE5E-9752-4764-A581-4B5E1A461C53</gtr:id><gtr:title>Database Queries that Explain their Work</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/533d6b5b301803f4cd1d8f4781cc43b8"><gtr:id>533d6b5b301803f4cd1d8f4781cc43b8</gtr:id><gtr:otherNames>Cheney J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>9781450329477</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/77B56CBB-552D-46E7-B25F-435D4482113A"><gtr:id>77B56CBB-552D-46E7-B25F-435D4482113A</gtr:id><gtr:title>On principles of Least Change and Least Surprise for bidirectional transformations</gtr:title><gtr:parentPublicationTitle>Journal of Object Technology</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/533d6b5b301803f4cd1d8f4781cc43b8"><gtr:id>533d6b5b301803f4cd1d8f4781cc43b8</gtr:id><gtr:otherNames>Cheney J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/E4A92F25-6F42-4683-A76A-58D2144061AB"><gtr:id>E4A92F25-6F42-4683-A76A-58D2144061AB</gtr:id><gtr:title>Entangled State Monads</gtr:title><gtr:parentPublicationTitle>2014 workshop on Bidirectional Transformations (BX 2014)</gtr:parentPublicationTitle><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/4f066d2e4f967110e9cf48f2af77608d"><gtr:id>4f066d2e4f967110e9cf48f2af77608d</gtr:id><gtr:otherNames>Cheney, J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/5AC92740-45F2-4286-A4D8-7DB8273E5C84"><gtr:id>5AC92740-45F2-4286-A4D8-7DB8273E5C84</gtr:id><gtr:title>Fundamental Approaches to Software Engineering</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/9f90cd1cc81dd50e6c407e45dae49d99"><gtr:id>9f90cd1cc81dd50e6c407e45dae49d99</gtr:id><gtr:otherNames>Stevens P</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2014-01-01</gtr:date><gtr:isbn>978-3-642-54803-1</gtr:isbn></gtr:publication><gtr:publication url="http://gtr.rcuk.ac.uk:80/publication/2B6F74C1-1598-4262-903C-839D91518D5A"><gtr:id>2B6F74C1-1598-4262-903C-839D91518D5A</gtr:id><gtr:title>How to Regain Equilibrium without Losing your Balance? Scenarios for Bx Deployment (Discussion Paper)</gtr:title><gtr:authors><gtr:author url="http://gtr.rcuk.ac.uk:80/person/31c49f09f8426ccfea54f08ad8b68822"><gtr:id>31c49f09f8426ccfea54f08ad8b68822</gtr:id><gtr:otherNames>McKinna J</gtr:otherNames></gtr:author></gtr:authors><gtr:date>2016-01-01</gtr:date></gtr:publication></gtr:publications><gtr:identifiers><gtr:identifier type="RCUK">EP/K020218/1</gtr:identifier></gtr:identifiers><gtr:healthCategories/><gtr:researchActivities/><gtr:researchSubjects><gtr:researchSubject><gtr:id>EB5F16BB-2772-4DDE-BD6C-3B7A6914B64C</gtr:id><gtr:percentage>100</gtr:percentage><gtr:text>Info. &amp; commun. Technol.</gtr:text></gtr:researchSubject></gtr:researchSubjects><gtr:researchTopics><gtr:researchTopic><gtr:id>0A982A4A-12CF-4734-AFCA-A5DC61F667F3</gtr:id><gtr:percentage>25</gtr:percentage><gtr:text>Information &amp; Knowledge Mgmt</gtr:text></gtr:researchTopic><gtr:researchTopic><gtr:id>E05CFE0B-163D-412D-A3C2-28E89B2CA336</gtr:id><gtr:percentage>75</gtr:percentage><gtr:text>Software Engineering</gtr:text></gtr:researchTopic></gtr:researchTopics><gtr:rcukProgrammes/></gtr:project></gtr:projectComposition></gtr:projectOverview>